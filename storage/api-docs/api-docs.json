{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel Property Management Documentation",
        "description": "L5 Swagger OpenApi description for garage project",
        "contact": {
            "email": "drrifatalashwad0@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/v1.0/affiliations-logo": {
            "post": {
                "tags": [
                    "affiliation_management"
                ],
                "summary": "This method is to store affiliation logo",
                "description": "This method is to store affiliation logo",
                "operationId": "createAffiliationLogo",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "image to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/affiliations": {
            "put": {
                "tags": [
                    "affiliation_management"
                ],
                "summary": "This method is to update affiliation",
                "description": "This method is to update affiliation",
                "operationId": "updateAffiliation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "description"
                                    },
                                    "logo": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "affiliation_management"
                ],
                "summary": "This method is to store affiliation",
                "description": "This method is to store affiliation",
                "operationId": "createAffiliation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "description"
                                    },
                                    "logo": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/affiliations/{perPage}": {
            "get": {
                "tags": [
                    "affiliation_management"
                ],
                "summary": "This method is to get affiliations ",
                "description": "This method is to get affiliations",
                "operationId": "getAffiliations",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/affiliations/{id}": {
            "delete": {
                "tags": [
                    "affiliation_management"
                ],
                "summary": "This method is to delete affiliation by id",
                "description": "This method is to delete affiliation by id",
                "operationId": "deleteAffiliationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/applicants": {
            "get": {
                "tags": [
                    "applicants"
                ],
                "summary": "This method is to get applicants  ",
                "description": "This method is to get applicants ",
                "operationId": "getApplicants",
                "parameters": [
                    {
                        "name": "customer_name",
                        "in": "query",
                        "description": "customer_name",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "customer_phone",
                        "in": "query",
                        "description": "customer_phone",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "address_line_1",
                        "in": "query",
                        "description": "address_line_1",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "property_type",
                        "in": "query",
                        "description": "property_type",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "no_of_beds",
                        "in": "query",
                        "description": "no_of_beds",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "no_of_baths",
                        "in": "query",
                        "description": "no_of_baths",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "start_deadline_to_move",
                        "in": "query",
                        "description": "start_deadline_to_move",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "end_deadline_to_move",
                        "in": "query",
                        "description": "end_deadline_to_move",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "working",
                        "in": "query",
                        "description": "working",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "job_title",
                        "in": "query",
                        "description": "job_title",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "per_page",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "is_active",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id",
                        "required": true,
                        "example": "ASC"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "applicants"
                ],
                "summary": "This method is to update applicants ",
                "description": "This method is to update applicants ",
                "operationId": "updateApplicant",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "customer_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "customer_name"
                                    },
                                    "customer_phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "customer_phone"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "customerexample.com"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Country Name"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "City Name"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "min_price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "min_price"
                                    },
                                    "max_price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "max_price"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "address_line_1"
                                    },
                                    "latitude": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "latitude"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "longitude"
                                    },
                                    "radius": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "radius"
                                    },
                                    "property_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "property_type"
                                    },
                                    "no_of_beds": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "no_of_beds"
                                    },
                                    "no_of_baths": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "no_of_baths"
                                    },
                                    "deadline_to_move": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "deadline_to_move"
                                    },
                                    "working": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "working"
                                    },
                                    "job_title": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "job_title"
                                    },
                                    "is_dss": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "is_dss"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "applicants"
                ],
                "summary": "This method is to store applicants",
                "description": "This method is to store applicants",
                "operationId": "createApplicant",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customer_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "customer_name"
                                    },
                                    "customer_phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "customer_phone"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "customer@example.com"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "Country Name"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "City Name"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "min_price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "min_price"
                                    },
                                    "max_price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "max_price"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "address_line_1"
                                    },
                                    "latitude": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "latitude"
                                    },
                                    "longitude": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "longitude"
                                    },
                                    "radius": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "radius"
                                    },
                                    "property_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "property_type"
                                    },
                                    "no_of_beds": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "no_of_beds"
                                    },
                                    "no_of_baths": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "no_of_baths"
                                    },
                                    "deadline_to_move": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "deadline_to_move"
                                    },
                                    "working": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "working"
                                    },
                                    "job_title": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "job_title"
                                    },
                                    "is_dss": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "is_dss"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/applicants/convert-to-tenant": {
            "put": {
                "tags": [
                    "applicants"
                ],
                "summary": "This method is to update applicants ",
                "description": "This method is to update applicants ",
                "operationId": "convertApplicantToTenant",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/applicants/toggle-active": {
            "put": {
                "tags": [
                    "applicants"
                ],
                "summary": "This method is to toggle applicants",
                "description": "This method is to toggle applicants",
                "operationId": "toggleActiveApplicant",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/matching-applicants": {
            "get": {
                "tags": [
                    "applicants"
                ],
                "summary": "This method is to get applicants  ",
                "description": "This method is to get applicants ",
                "operationId": "getMatchingApplicants",
                "parameters": [
                    {
                        "name": "customer_name",
                        "in": "query",
                        "description": "customer_name",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "customer_phone",
                        "in": "query",
                        "description": "customer_phone",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "address_line_1",
                        "in": "query",
                        "description": "address_line_1",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "matching_property_id",
                        "in": "query",
                        "description": "matching_property_id",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "property_type",
                        "in": "query",
                        "description": "property_type",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "no_of_beds",
                        "in": "query",
                        "description": "no_of_beds",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "no_of_baths",
                        "in": "query",
                        "description": "no_of_baths",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "start_deadline_to_move",
                        "in": "query",
                        "description": "start_deadline_to_move",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "end_deadline_to_move",
                        "in": "query",
                        "description": "end_deadline_to_move",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "working",
                        "in": "query",
                        "description": "working",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "job_title",
                        "in": "query",
                        "description": "job_title",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "per_page",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "is_active",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id",
                        "required": true,
                        "example": "ASC"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/applicants/{ids}": {
            "delete": {
                "tags": [
                    "applicants"
                ],
                "summary": "This method is to delete applicant by id",
                "description": "This method is to delete applicant by id",
                "operationId": "deleteApplicantsByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "ids",
                        "required": true,
                        "example": "1,2,3"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to store user",
                "description": "This method is to store user",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_Name",
                                    "last_Name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "phone",
                                    "address_line_1",
                                    "address_line_2",
                                    "country",
                                    "city",
                                    "postcode"
                                ],
                                "properties": {
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "last_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Al"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "rifat@g.c"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "01771034383"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "dhaka"
                                    },
                                    "address_line_2": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "dinajpur"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "bangladesh"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "dhaka"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1207"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1207"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1207"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to login user",
                "description": "This method is to login user",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "asjadtariq@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678@We"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/token-regenerate": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to regenerate Token",
                "description": "This method is to regenerate Token",
                "operationId": "regenerateToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "site_redirect_token"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "site_redirect_token": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/forgetpassword": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to store token",
                "description": "This method is to store token",
                "operationId": "storeToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    },
                                    "client_site": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "client"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/resend-email-verify-mail": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to resend email verify mail",
                "description": "This method is to resend email verify mail",
                "operationId": "resendEmailVerifyToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/forgetpassword/reset/{token}": {
            "patch": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to change password",
                "description": "This method is to change password",
                "operationId": "changePasswordByToken",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "token",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "aaaaaaaa"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/v1.0/auth/user-register-with-garage": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to store user with garage client side",
                "description": "This method is to store user with garage client side",
                "operationId": "registerUserWithGarageClient",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user",
                                    "garage",
                                    "service"
                                ],
                                "properties": {
                                    "user": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "first_Name": "Rifat",
                                            "last_Name": "Al-Ashwad",
                                            "email": "rifatalashwad@gmail.com",
                                            "password": "12345678",
                                            "password_confirmation": "12345678",
                                            "phone": "01771034383",
                                            "image": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "address_line_1": "Dhaka",
                                            "address_line_2": "Dinajpur",
                                            "country": "Bangladesh",
                                            "city": "Dhaka",
                                            "postcode": "Dinajpur",
                                            "lat": "10",
                                            "long": "Din10ajpur"
                                        }
                                    },
                                    "garage": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "name": "ABCD Garage",
                                            "about": "Best Garage in Dhaka",
                                            "web_page": "https://www.facebook.com/",
                                            "phone": "01771034383",
                                            "email": "rifatalashwad@gmail.com",
                                            "additional_information": "No Additional Information",
                                            "address_line_1": "Dhaka",
                                            "address_line_2": "Dinajpur",
                                            "lat": "23.704263332849386",
                                            "long": "90.44707059805279",
                                            "country": "Bangladesh",
                                            "city": "Dhaka",
                                            "currency": "BDT",
                                            "postcode": "Dinajpur",
                                            "logo": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "image": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "images": [
                                                "/a",
                                                "/b",
                                                "/c"
                                            ],
                                            "is_mobile_garage": true,
                                            "wifi_available": true,
                                            "labour_rate": 500
                                        }
                                    },
                                    "service": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "automobile_category_id": 1,
                                                "services": [
                                                    {
                                                        "id": 1,
                                                        "checked": true,
                                                        "sub_services": [
                                                            {
                                                                "id": 1,
                                                                "checked": true
                                                            },
                                                            {
                                                                "id": 2,
                                                                "checked": false
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "automobile_makes": [
                                                    {
                                                        "id": 1,
                                                        "checked": true,
                                                        "models": [
                                                            {
                                                                "id": 1,
                                                                "checked": true
                                                            },
                                                            {
                                                                "id": 2,
                                                                "checked": false
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/v1.0/user": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to get  user ",
                "description": "This method is to get user",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/user-with-business": {
            "get": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to get  user with business ",
                "description": "This method is to get user with business",
                "operationId": "getUserWithBusiness",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/check/email": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to check user",
                "description": "This method is to check user",
                "operationId": "checkEmail",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@g.c"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/changepassword": {
            "patch": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to change password",
                "description": "This method is to change password",
                "operationId": "changePassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password",
                                    "cpassword"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "aaaaaaaa"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "aaaaaaaa"
                                    },
                                    "current_password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "aaaaaaaa"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/update-user-info": {
            "put": {
                "tags": [
                    "auth"
                ],
                "summary": "This method is to update user by user",
                "description": "This method is to update user by user",
                "operationId": "updateUserInfo",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_Name",
                                    "last_Name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "phone",
                                    "address_line_1",
                                    "address_line_2",
                                    "country",
                                    "city",
                                    "postcode"
                                ],
                                "properties": {
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "tsa"
                                    },
                                    "last_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "ts"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "admin@gmail.com"
                                    },
                                    "password": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "12345678"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "12345678"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "address_line_2": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-categories": {
            "put": {
                "tags": [
                    "automobile_management.category"
                ],
                "summary": "This method is to update automobile category",
                "description": "This method is to update automobile category",
                "operationId": "updateAutomobileCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "automobile_management.category"
                ],
                "summary": "This method is to store automobile category",
                "description": "This method is to store automobile category",
                "operationId": "createAutomobileCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-categories/{perPage}": {
            "get": {
                "tags": [
                    "automobile_management.category"
                ],
                "summary": "This method is to get automobile categories",
                "description": "This method is to get automobile categories",
                "operationId": "getAutomobileCategories",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-categories/get/all": {
            "get": {
                "tags": [
                    "basics"
                ],
                "summary": "This method is to get all automobile categories",
                "description": "This method is to get all automobile categories",
                "operationId": "getAllAutomobileCategories",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-categories/single/get/{id}": {
            "get": {
                "tags": [
                    "automobile_management.category"
                ],
                "summary": "This method is to get automobile category by id",
                "description": "This method is to get automobile category by id",
                "operationId": "getAutomobileCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-categories/{id}": {
            "delete": {
                "tags": [
                    "automobile_management.category"
                ],
                "summary": "This method is to delete automobile category by id",
                "description": "This method is to delete automobile category by id",
                "operationId": "deleteAutomobileCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-makes": {
            "put": {
                "tags": [
                    "automobile_management.make"
                ],
                "summary": "This method is to update automobile make",
                "description": "This method is to update automobile make",
                "operationId": "updateAutomobileMake",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "automobile_management.make"
                ],
                "summary": "This method is to store automobile make",
                "description": "This method is to store automobile make",
                "operationId": "createAutomobileMake",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "automobile_category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "automobile_category_id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-makes/{categoryId}/{perPage}": {
            "get": {
                "tags": [
                    "automobile_management.make"
                ],
                "summary": "This method is to get automobile makes by category id",
                "description": "This method is to get automobile makes by category id",
                "operationId": "getAutomobileMakes",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "categoryId",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-makes-all/{categoryId}": {
            "get": {
                "tags": [
                    "basics"
                ],
                "summary": "This method is to get all automobile makes by category id",
                "description": "This method is to get all automobile makes by category id",
                "operationId": "getAutomobileMakesAll",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "categoryId",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2.0/automobile-makes-all/{categoryId}": {
            "get": {
                "tags": [
                    "basics"
                ],
                "summary": "This method is to get all automobile makes by category id",
                "description": "This method is to get all automobile makes by category id",
                "operationId": "getAutomobileMakesAllV2",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "categoryId",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-makes/single/get/{id}": {
            "get": {
                "tags": [
                    "automobile_management.make"
                ],
                "summary": "This method is to get automobile make by id",
                "description": "This method is to get automobile make by id",
                "operationId": "getAutomobileMakeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-makes/{id}": {
            "delete": {
                "tags": [
                    "automobile_management.make"
                ],
                "summary": "This method is to delete automobile make by id",
                "description": "This method is to delete automobile make by id",
                "operationId": "deleteAutomobileMakeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-models": {
            "put": {
                "tags": [
                    "automobile_management.model"
                ],
                "summary": "This method is to update automobile model",
                "description": "This method is to update automobile model",
                "operationId": "updateAutomobileModel",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "automobile_management.model"
                ],
                "summary": "This method is to store automobile model",
                "description": "This method is to store automobile model",
                "operationId": "createAutomobileModel",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "automobile_make_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "automobile_make_id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-models/{makeId}/{perPage}": {
            "get": {
                "tags": [
                    "automobile_management.model"
                ],
                "summary": "This method is to get automobile models by make id",
                "description": "This method is to get automobile models by make id",
                "operationId": "getAutomobileModel",
                "parameters": [
                    {
                        "name": "makeId",
                        "in": "path",
                        "description": "makeId",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-models/single/get/{id}": {
            "get": {
                "tags": [
                    "automobile_management.model"
                ],
                "summary": "This method is to get automobile model by id",
                "description": "This method is to get automobile model by id",
                "operationId": "getAutomobileModelById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-models-all": {
            "get": {
                "tags": [
                    "basics"
                ],
                "summary": "This method is to get all automobile models by make ids",
                "description": "This method is to get all automobile models by make ids",
                "operationId": "getAutomobileModelsAll",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "automobile_make_ids[]",
                        "in": "query",
                        "description": "automobile_make_id",
                        "required": true,
                        "example": "1,2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-models/{id}": {
            "delete": {
                "tags": [
                    "automobile_management.model"
                ],
                "summary": "This method is to delete automobile model by id",
                "description": "This method is to delete automobile model by id",
                "operationId": "deleteAutomobileModelById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-model-variants": {
            "put": {
                "tags": [
                    "automobile_management.model_variant"
                ],
                "summary": "This method is to update automobile model variant",
                "description": "This method is to update automobile model variant",
                "operationId": "updateAutomobileModelVariant",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "automobile_management.model_variant"
                ],
                "summary": "This method is to store automobile model variant",
                "description": "This method is to store automobile model variant",
                "operationId": "createAutomobileModelVariant",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "automobile_model_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "automobile_model_id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-model-variants/{modelId}/{perPage}": {
            "get": {
                "tags": [
                    "automobile_management.model_variant"
                ],
                "summary": "This method is to get automobile model variants by model id",
                "description": "This method is to get automobile model variants by model id",
                "operationId": "getAutomobileModelVariant",
                "parameters": [
                    {
                        "name": "makeId",
                        "in": "path",
                        "description": "makeId",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-model-variants/single/get/{id}": {
            "get": {
                "tags": [
                    "automobile_management.model_variant"
                ],
                "summary": "This method is to get automobile model variant by id",
                "description": "This method is to get automobile model variant by id",
                "operationId": "getAutomobileModelVariantById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-model-variants/{id}": {
            "delete": {
                "tags": [
                    "automobile_management.model_variant"
                ],
                "summary": "This method is to delete automobile model variant by id",
                "description": "This method is to delete automobile model variant by id",
                "operationId": "deleteAutomobileModelVariantById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-fuel-types": {
            "put": {
                "tags": [
                    "automobile_management.fuel_type"
                ],
                "summary": "This method is to update automobile Fuel Type",
                "description": "This method is to update automobile Fuel Type",
                "operationId": "updateAutomobileFuelType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "automobile_management.fuel_type"
                ],
                "summary": "This method is to store automobile Fuel Type",
                "description": "This method is to store automobile Fuel Type",
                "operationId": "createAutomobileFuelType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "automobile_model_variant_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "automobile_model_variant_id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-fuel-types/{modelVariantId}/{perPage}": {
            "get": {
                "tags": [
                    "automobile_management.fuel_type"
                ],
                "summary": "This method is to get automobile Fuel Types by model variant id",
                "description": "This method is to get automobile Fuel Types by model variant id",
                "operationId": "getAutomobileFuelType",
                "parameters": [
                    {
                        "name": "makeId",
                        "in": "path",
                        "description": "makeId",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-fuel-types/single/get/{id}": {
            "get": {
                "tags": [
                    "automobile_management.fuel_type"
                ],
                "summary": "This method is to get automobile fuel type by id",
                "description": "This method is to get automobile fuel type by id",
                "operationId": "getAutomobileFuelTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/automobile-fuel-types/{id}": {
            "delete": {
                "tags": [
                    "automobile_management.fuel_type"
                ],
                "summary": "This method is to delete automobile fuel type by id",
                "description": "This method is to delete automobile fuel type by id",
                "operationId": "deleteAutomobileFuelTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/bills": {
            "put": {
                "tags": [
                    "property_management.bill_management"
                ],
                "summary": "This method is to update bill",
                "description": "This method is to update bill",
                "operationId": "updateBill",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "create_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "payment_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "property_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "landlord_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "payment_mode": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "card"
                                    },
                                    "payabble_amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10.10"
                                    },
                                    "deduction": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10.10"
                                    },
                                    "remarks": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "remarks"
                                    },
                                    "bill_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "bill_item_id": "1",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            },
                                            {
                                                "bill_item_id": "2",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            }
                                        ]
                                    },
                                    "sale_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "sale_id": "1",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            },
                                            {
                                                "sale_id": "2",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            }
                                        ]
                                    },
                                    "repair_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "repair_id": "1",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            },
                                            {
                                                "repair_id": "2",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.bill_management"
                ],
                "summary": "This method is to store bill",
                "description": "This method is to store bill",
                "operationId": "createBill",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "create_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "payment_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "property_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "landlord_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "payment_mode": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "card"
                                    },
                                    "payabble_amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10.10"
                                    },
                                    "deduction": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10.10"
                                    },
                                    "remarks": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "remarks"
                                    },
                                    "bill_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "bill_item_id": "1",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            },
                                            {
                                                "bill_item_id": "2",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            }
                                        ]
                                    },
                                    "sale_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "sale_id": "1",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            },
                                            {
                                                "sale_id": "2",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            }
                                        ]
                                    },
                                    "repair_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "repair_id": "1",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            },
                                            {
                                                "repair_id": "2",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/bills/{perPage}": {
            "get": {
                "tags": [
                    "property_management.bill_management"
                ],
                "summary": "This method is to get bills ",
                "description": "This method is to get bills",
                "operationId": "getBills",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status",
                        "required": true,
                        "example": "status"
                    },
                    {
                        "name": "invoice_reference",
                        "in": "query",
                        "description": "invoice_reference",
                        "required": true,
                        "example": "1374"
                    },
                    {
                        "name": "landlord_id",
                        "in": "query",
                        "description": "landlord_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "description": "tenant_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "description": "client_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "description": "property_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "min_total_due",
                        "in": "query",
                        "description": "min_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "max_total_due",
                        "in": "query",
                        "description": "max_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_ids[]",
                        "in": "query",
                        "description": "property_ids",
                        "required": true,
                        "example": "1,2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/bills/get/all": {
            "get": {
                "tags": [
                    "property_management.bill_management"
                ],
                "summary": "This method is to get bills ",
                "description": "This method is to get bills",
                "operationId": "getAllBills",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status",
                        "required": true,
                        "example": "status"
                    },
                    {
                        "name": "invoice_reference",
                        "in": "query",
                        "description": "invoice_reference",
                        "required": true,
                        "example": "1374"
                    },
                    {
                        "name": "landlord_id",
                        "in": "query",
                        "description": "landlord_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "min_amount",
                        "in": "query",
                        "description": "min_amount",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "max_amount",
                        "in": "query",
                        "description": "max_amount",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "description": "tenant_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "description": "client_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "description": "property_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_ids[]",
                        "in": "query",
                        "description": "property_ids",
                        "required": true,
                        "example": "1,2"
                    },
                    {
                        "name": "min_total_due",
                        "in": "query",
                        "description": "min_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "total_due_max",
                        "in": "query",
                        "description": "total_due",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/bills/get/single/{id}": {
            "get": {
                "tags": [
                    "property_management.bill_management"
                ],
                "summary": "This method is to get bill by id",
                "description": "This method is to get bill by id",
                "operationId": "getBillById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/bills/{id}": {
            "delete": {
                "tags": [
                    "property_management.bill_management"
                ],
                "summary": "This method is to delete bill by id",
                "description": "This method is to delete bill by id",
                "operationId": "deleteBillById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/bill-items": {
            "put": {
                "tags": [
                    "property_management.bill_item_management"
                ],
                "summary": "This method is to update bill item ",
                "description": "This method is to update bill item ",
                "operationId": "updateBillItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10.10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.bill_item_management"
                ],
                "summary": "This method is to store bill item ",
                "description": "This method is to store bill item ",
                "operationId": "createBillItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10.10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/bill-items/{perPage}": {
            "get": {
                "tags": [
                    "property_management.bill_item_management"
                ],
                "summary": "This method is to get bill items ",
                "description": "This method is to get bill items",
                "operationId": "getBillItems",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/bill-items/get/single/{id}": {
            "get": {
                "tags": [
                    "property_management.bill_item_management"
                ],
                "summary": "This method is to get bill item  by id",
                "description": "This method is to get bill item by id",
                "operationId": "getBillItemById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/bill-items/{id}": {
            "delete": {
                "tags": [
                    "property_management.bill_item_management"
                ],
                "summary": "This method is to delete bill item  by id",
                "description": "This method is to delete bill item  by id",
                "operationId": "deleteBillItemById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/bookings": {
            "put": {
                "tags": [
                    "booking_management"
                ],
                "summary": "This method is to update booking",
                "description": "This method is to update booking",
                "operationId": "updateBooking",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "garage_id",
                                    "coupon_code",
                                    "price",
                                    "automobile_make_id",
                                    "automobile_model_id",
                                    "car_registration_no",
                                    "car_registration_year",
                                    "booking_sub_service_ids",
                                    "booking_garage_package_ids",
                                    "job_start_time",
                                    "job_end_time"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "coupon_code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "123456"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "30"
                                    },
                                    "automobile_make_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "automobile_model_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "car_registration_no": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "r-00011111"
                                    },
                                    "car_registration_year": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "booking_sub_service_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ]
                                    },
                                    "booking_garage_package_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ]
                                    },
                                    "status": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "pending"
                                    },
                                    "job_start_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "job_start_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "08:10"
                                    },
                                    "job_end_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10:10"
                                    },
                                    "transmission": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "transmission"
                                    },
                                    "fuel": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Fuel"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/bookings/change-status": {
            "put": {
                "tags": [
                    "booking_management"
                ],
                "summary": "This method is to change booking status",
                "description": "This method is to change booking status",
                "operationId": "changeBookingStatus",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "garage_id",
                                    "status"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "status": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "pending"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/bookings/confirm": {
            "put": {
                "tags": [
                    "booking_management"
                ],
                "summary": "This method is to confirm booking",
                "description": "This method is to confirm booking",
                "operationId": "confirmBooking",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "garage_id",
                                    "job_start_time",
                                    "job_end_time"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "30"
                                    },
                                    "job_start_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "job_start_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "08:10"
                                    },
                                    "job_end_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10:10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/bookings/{garage_id}/{perPage}": {
            "get": {
                "tags": [
                    "booking_management"
                ],
                "summary": "This method is to get  bookings ",
                "description": "This method is to get bookings",
                "operationId": "getBookings",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/bookings/single/{garage_id}/{id}": {
            "get": {
                "tags": [
                    "booking_management"
                ],
                "summary": "This method is to  get booking by id",
                "description": "This method is to get booking by id",
                "operationId": "getBookingById",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/bookings/{garage_id}/{id}": {
            "delete": {
                "tags": [
                    "booking_management"
                ],
                "summary": "This method is to  delete booking by id",
                "description": "This method is to delete booking by id",
                "operationId": "deleteBookingById",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client-image": {
            "post": {
                "tags": [
                    "property_management.client_management"
                ],
                "summary": "This method is to store client logo",
                "description": "This method is to store client logo",
                "operationId": "createClientImage",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "image to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/clients": {
            "put": {
                "tags": [
                    "property_management.client_management"
                ],
                "summary": "This method is to update client",
                "description": "This method is to update client",
                "operationId": "updateClient",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "image.jpg"
                                    },
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "last_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Al"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "rifatalashwad0@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "01771034383"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "dhaka"
                                    },
                                    "address_line_2": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "dinajpur"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "Bangladesh"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "Dhaka"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "note": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.client_management"
                ],
                "summary": "This method is to store client",
                "description": "This method is to store client",
                "operationId": "createClient",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "image.jpg"
                                    },
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "last_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Al"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "rifatalashwad0@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "01771034383"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "dhaka"
                                    },
                                    "address_line_2": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "dinajpur"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "Bangladesh"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "Dhaka"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "note": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/clients/{perPage}": {
            "get": {
                "tags": [
                    "property_management.client_management"
                ],
                "summary": "This method is to get clients ",
                "description": "This method is to get clients",
                "operationId": "getClients",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "description": "property_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_ids[]",
                        "in": "query",
                        "description": "property_ids",
                        "required": true,
                        "example": "1,2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/clients/get/all/optimized": {
            "get": {
                "tags": [
                    "property_management.client_management"
                ],
                "summary": "This method is to get clients ",
                "description": "This method is to get clients",
                "operationId": "getAllClientsOptimized",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "description": "property_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_ids[]",
                        "in": "query",
                        "description": "property_ids",
                        "required": true,
                        "example": "1,2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/clients/get/single/{id}": {
            "get": {
                "tags": [
                    "property_management.client_management"
                ],
                "summary": "This method is to get client by id",
                "description": "This method is to get client by id",
                "operationId": "getClientById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/clients/{id}": {
            "delete": {
                "tags": [
                    "property_management.client_management"
                ],
                "summary": "This method is to delete client by id",
                "description": "This method is to delete client by id",
                "operationId": "deleteClientById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/coupons": {
            "put": {
                "tags": [
                    "coupon_management"
                ],
                "summary": "This method is to update coupons",
                "description": "This method is to update coupons",
                "operationId": "updateCoupon",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "garage_id",
                                    "name",
                                    "code",
                                    "discount_type",
                                    "discount_amount",
                                    "min_total",
                                    "max_total",
                                    "redemptions",
                                    "coupon_start_date",
                                    "coupon_end_date",
                                    "is_auto_apply",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "name"
                                    },
                                    "code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "tttdddsss"
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "percentage"
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "min_total": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "max_total": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "30"
                                    },
                                    "redemptions": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "coupon_start_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "coupon_end_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "is_auto_apply": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "coupon_management"
                ],
                "summary": "This method is to store coupon",
                "description": "This method is to store coupon",
                "operationId": "createCoupon",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "garage_id",
                                    "name",
                                    "code",
                                    "discount_type",
                                    "discount_amount",
                                    "min_total",
                                    "max_total",
                                    "redemptions",
                                    "coupon_start_date",
                                    "coupon_end_date",
                                    "is_auto_apply",
                                    "is_active"
                                ],
                                "properties": {
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "name"
                                    },
                                    "code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "tttdddsss"
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "percentage"
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "min_total": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "max_total": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "30"
                                    },
                                    "redemptions": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "coupon_start_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "coupon_end_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "is_auto_apply": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/coupons/{garage_id}/{perPage}": {
            "get": {
                "tags": [
                    "coupon_management"
                ],
                "summary": "This method is to get coupons ",
                "description": "This method is to get coupons",
                "operationId": "getCoupons",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/coupons/single/{garage_id}/{id}": {
            "get": {
                "tags": [
                    "coupon_management"
                ],
                "summary": "This method is to get coupon by id ",
                "description": "This method is to get coupon by id ",
                "operationId": "getCouponById",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/coupons/{garage_id}/{id}": {
            "delete": {
                "tags": [
                    "coupon_management"
                ],
                "summary": "This method is to delete coupon by id",
                "description": "This method is to delete coupon by id",
                "operationId": "deleteCouponById",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-owner-dashboard/jobs-in-area/{garage_id}": {
            "get": {
                "tags": [
                    "dashboard_management.garage_owner"
                ],
                "summary": "This should return list of jobs posted by drivers within same city and which are still not finalised and this garage owner have not applied yet.",
                "description": "This should return list of jobs posted by drivers within same city and which are still not finalised and this garage owner have not applied yet.",
                "operationId": "getGarageOwnerDashboardDataJobList",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-owner-dashboard/jobs-application/{garage_id}": {
            "get": {
                "tags": [
                    "dashboard_management.garage_owner"
                ],
                "summary": "Total number of Jobs in the area and out of which total number of jobs this garage owner have applied",
                "description": "Total number of Jobs in the area and out of which total number of jobs this garage owner have applied",
                "operationId": "getGarageOwnerDashboardDataJobApplications",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-owner-dashboard/winned-jobs-application/{garage_id}": {
            "get": {
                "tags": [
                    "dashboard_management.garage_owner"
                ],
                "summary": "Total Job Won( Total job User have selcted this garage )",
                "description": "Total Job Won( Total job User have selcted this garage )",
                "operationId": "getGarageOwnerDashboardDataWinnedJobApplications",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-owner-dashboard/completed-bookings/{garage_id}": {
            "get": {
                "tags": [
                    "dashboard_management.garage_owner"
                ],
                "summary": "Total completed Bookings Total Bookings completed by this garage owner",
                "description": "Total completed Bookings Total Bookings completed by this garage owner",
                "operationId": "getGarageOwnerDashboardDataCompletedBookings",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-owner-dashboard/upcoming-jobs/{garage_id}/{duration}": {
            "get": {
                "tags": [
                    "dashboard_management.garage_owner"
                ],
                "summary": "Total completed Bookings Total Bookings completed by this garage owner",
                "description": "Total completed Bookings Total Bookings completed by this garage owner",
                "operationId": "getGarageOwnerDashboardDataUpcomingJobs",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "duration",
                        "in": "path",
                        "description": "duration",
                        "required": true,
                        "example": "7"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-owner-dashboard/expiring-affiliations/{garage_id}/{duration}": {
            "get": {
                "tags": [
                    "dashboard_management.garage_owner"
                ],
                "summary": "Total completed Bookings Total Bookings completed by this garage owner",
                "description": "Total completed Bookings Total Bookings completed by this garage owner",
                "operationId": "getGarageOwnerDashboardDataExpiringAffiliations",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "duration",
                        "in": "path",
                        "description": "duration",
                        "required": true,
                        "example": "7"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-owner-dashboard/{garage_id}": {
            "get": {
                "tags": [
                    "dashboard_management.garage_owner"
                ],
                "summary": "get all dashboard data combined",
                "description": "get all dashboard data combined",
                "operationId": "getGarageOwnerDashboardData",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/superadmin-dashboard": {
            "get": {
                "tags": [
                    "dashboard_management.superadmin"
                ],
                "summary": "get all dashboard data combined",
                "description": "get all dashboard data combined",
                "operationId": "getSuperAdminDashboardData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/document-types": {
            "put": {
                "tags": [
                    "property_management.document_type_management"
                ],
                "summary": "This method is to update document type",
                "description": "This method is to update document type",
                "operationId": "updateDocumentType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.document_type_management"
                ],
                "summary": "This method is to store document type",
                "description": "This method is to store document type",
                "operationId": "createDocumentType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/document-types/{perPage}": {
            "get": {
                "tags": [
                    "property_management.document_type_management"
                ],
                "summary": "This method is to get document types ",
                "description": "This method is to get document types",
                "operationId": "getDocumentTypes",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/document-types/get/all": {
            "get": {
                "tags": [
                    "property_management.document_type_management"
                ],
                "summary": "This method is to get all document types ",
                "description": "This method is to get all document types",
                "operationId": "getAllDocumentTypes",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/document-types/{id}": {
            "delete": {
                "tags": [
                    "property_management.document_type_management"
                ],
                "summary": "This method is to delete fuel station by id",
                "description": "This method is to delete fuel station by id",
                "operationId": "deleteDocumentTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-templates": {
            "put": {
                "tags": [
                    "template_management.email"
                ],
                "summary": "This method is to update email template",
                "description": "This method is to update email template",
                "operationId": "updateEmailTemplate",
                "requestBody": {
                    "description": "use [FirstName],[LastName],[FullName],[AccountVerificationLink],[ForgotPasswordLink]\n     * [customer_FirstName],[customer_LastName],[customer_FullName],[garage_owner_FirstName],[garage_owner_LastName],[garage_owner_FullName],[automobile_make],[automobile_model],[car_registration_no],[car_registration_year],[status],[payment_status],[additional_information],[discount_type],[discount_amount],[price],[job_start_date],[job_start_time],[job_end_time],[coupon_code],[fuel],[transmission]\n     *  in the template",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "template",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "emal v1"
                                    },
                                    "is_active": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "template": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "html template goes here"
                                    },
                                    "wrapper_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "z.unused"
                ],
                "summary": "This method is to store email template",
                "description": "This method is to store email template",
                "operationId": "createEmailTemplate",
                "requestBody": {
                    "description": "use {{dynamic-username}} {{dynamic-verify-link}} in the template.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "template",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "emal v1"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "email_verification_mail"
                                    },
                                    "template": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "html template goes here"
                                    },
                                    "wrapper_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-templates/{perPage}": {
            "get": {
                "tags": [
                    "template_management.email"
                ],
                "summary": "This method is to get email templates ",
                "description": "This method is to get email templates",
                "operationId": "getEmailTemplates",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-templates/single/{id}": {
            "get": {
                "tags": [
                    "template_management.email"
                ],
                "summary": "This method is to get email template by id",
                "description": "This method is to get email template by id",
                "operationId": "getEmailTemplateById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-template-types": {
            "get": {
                "tags": [
                    "template_management.email"
                ],
                "summary": "This method is to get email template types ",
                "description": "This method is to get email template types",
                "operationId": "getEmailTemplateTypes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-templates/{id}": {
            "delete": {
                "tags": [
                    "z.unused"
                ],
                "summary": "This method is to delete email template by id",
                "description": "This method is to delete email template by id",
                "operationId": "deleteEmailTemplateById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-template-wrappers": {
            "put": {
                "tags": [
                    "template_management.wrapper.email"
                ],
                "summary": "This method is to update email template wrapper",
                "description": "This method is to update email template wrapper",
                "operationId": "updateEmailTemplateWrapper",
                "requestBody": {
                    "description": "use [content] in the template",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "template",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "emal v1"
                                    },
                                    "is_active": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "template": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "html template goes here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-template-wrappers/{perPage}": {
            "get": {
                "tags": [
                    "template_management.wrapper.email"
                ],
                "summary": "This method is to get email template  wrappers ",
                "description": "This method is to get email template wrappers",
                "operationId": "getEmailTemplateWrappers",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/email-template-wrappers/single/{id}": {
            "get": {
                "tags": [
                    "template_management.wrapper.email"
                ],
                "summary": "This method is to get email template wrapper by id",
                "description": "This method is to get email template wrapper by id",
                "operationId": "getEmailTemplateWrapperById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/files/single-file-upload": {
            "post": {
                "tags": [
                    "files"
                ],
                "summary": "This method is to store files",
                "description": "This method is to store files",
                "operationId": "createFileSingle",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "file to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/files/multiple-file-upload": {
            "post": {
                "tags": [
                    "files"
                ],
                "summary": "This method is to store multiple leave files",
                "description": "This method is to store multiple leave files",
                "operationId": "createFileMultiple",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "files[]"
                                ],
                                "properties": {
                                    "files[]": {
                                        "description": "array of files to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "file"
                                        },
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/fuel-station": {
            "put": {
                "tags": [
                    "fuel_station_management"
                ],
                "summary": "This method is to update fuel station",
                "description": "This method is to update fuel station",
                "operationId": "updateFuelStation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "address",
                                    "opening_time",
                                    "closing_time",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "opening_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10:10"
                                    },
                                    "closing_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10:10"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "description"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "23.704263332849386"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "90.44707059805279"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "address_line_2": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "additional_information": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "options": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "option_id": 1,
                                                "is_active": true
                                            },
                                            {
                                                "option_id": 2,
                                                "is_active": true
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fuel_station_management"
                ],
                "summary": "This method is to store fuel station",
                "description": "This method is to store fuel station",
                "operationId": "createFuelStation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "address",
                                    "opening_time",
                                    "closing_time",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "opening_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10:10"
                                    },
                                    "closing_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10:10"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "description"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "23.704263332849386"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "90.44707059805279"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "address_line_2": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "additional_information": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "options": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "option_id": 1,
                                                "is_active": true
                                            },
                                            {
                                                "option_id": 2,
                                                "is_active": true
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/fuel-station/{perPage}": {
            "get": {
                "tags": [
                    "fuel_station_management"
                ],
                "summary": "This method is to get fuel stations ",
                "description": "This method is to get fuel stations",
                "operationId": "getFuelStations",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "time",
                        "in": "query",
                        "description": "current time",
                        "required": true,
                        "example": "10:10"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "country",
                        "required": true,
                        "example": "country"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "city",
                        "required": true,
                        "example": "city"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "start_lat",
                        "in": "query",
                        "description": "start_lat",
                        "required": true,
                        "example": "3"
                    },
                    {
                        "name": "end_lat",
                        "in": "query",
                        "description": "end_lat",
                        "required": true,
                        "example": "2"
                    },
                    {
                        "name": "start_long",
                        "in": "query",
                        "description": "start_long",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "end_long",
                        "in": "query",
                        "description": "end_long",
                        "required": true,
                        "example": "4"
                    },
                    {
                        "name": "active_option_ids[]",
                        "in": "query",
                        "description": "active_option_ids",
                        "required": true,
                        "example": "1,2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/fuel-station/{perPage}": {
            "get": {
                "tags": [
                    "client.fuel_station_management"
                ],
                "summary": "This method is to get fuel stations client ",
                "description": "This method is to get fuel stations client",
                "operationId": "getFuelStationsClient",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "time",
                        "in": "query",
                        "description": "current time",
                        "required": true,
                        "example": "10:10"
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "country",
                        "required": true,
                        "example": "country"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "city",
                        "required": true,
                        "example": "city"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "start_lat",
                        "in": "query",
                        "description": "start_lat",
                        "required": true,
                        "example": "3"
                    },
                    {
                        "name": "end_lat",
                        "in": "query",
                        "description": "end_lat",
                        "required": true,
                        "example": "2"
                    },
                    {
                        "name": "start_long",
                        "in": "query",
                        "description": "start_long",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "end_long",
                        "in": "query",
                        "description": "end_long",
                        "required": true,
                        "example": "4"
                    },
                    {
                        "name": "active_option_ids[]",
                        "in": "query",
                        "description": "active_option_ids",
                        "required": true,
                        "example": "1,2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/fuel-station/get/single/{id}": {
            "get": {
                "tags": [
                    "client.fuel_station_management"
                ],
                "summary": "This method is to get fuel station by id client ",
                "description": "This method is to get fuel station by id client",
                "operationId": "getFuelStationByIdClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/fuel-station/{id}": {
            "delete": {
                "tags": [
                    "fuel_station_management"
                ],
                "summary": "This method is to delete fuel station by id",
                "description": "This method is to delete fuel station by id",
                "operationId": "deleteFuelStationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/fuel-stations-galleries/{fuel_station_id}": {
            "get": {
                "tags": [
                    "fuel_station_gallery_management"
                ],
                "summary": "This method is to get fuel station galleries",
                "description": "This method is to get fuel station galleries",
                "operationId": "getFuelStationGalleries",
                "parameters": [
                    {
                        "name": "fuel_station_id",
                        "in": "path",
                        "description": "fuel_station_id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fuel_station_gallery_management"
                ],
                "summary": "This method is to store fuel station gallery",
                "description": "This method is to store fuel station gallery",
                "operationId": "createFuelStationGallery",
                "parameters": [
                    {
                        "name": "fuel_station_id",
                        "in": "path",
                        "description": "fuel_station_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "images[]"
                                ],
                                "properties": {
                                    "images[]": {
                                        "description": "array of images to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "file"
                                        },
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/fuel-stations-galleries/{fuel_station_id}": {
            "get": {
                "tags": [
                    "client.fuel_station_gallery_management"
                ],
                "summary": "This method is to get fuel station galleries client",
                "description": "This method is to get fuel station galleries client",
                "operationId": "getFuelStationGalleriesClient",
                "parameters": [
                    {
                        "name": "fuel_station_id",
                        "in": "path",
                        "description": "fuel_station_id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/fuel-stations-galleries/{fuel_station_id}/{id}": {
            "delete": {
                "tags": [
                    "fuel_station_gallery_management"
                ],
                "summary": "This method is to delete fuel station gallery by id",
                "description": "This method is to delete fuel station gellery by id",
                "operationId": "deleteFuelStationGalleryById",
                "parameters": [
                    {
                        "name": "fuel_station_id",
                        "in": "path",
                        "description": "fuel_station_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/fuel-station-services": {
            "put": {
                "tags": [
                    "fuel_station_service_management"
                ],
                "summary": "This method is to update fuel station service",
                "description": "This method is to update fuel station service",
                "operationId": "updateFuelStationService",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "icon"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "fa fa-halua-kha"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "fuel_station_service_management"
                ],
                "summary": "This method is to store fuel station services",
                "description": "This method is to store fuel station servces",
                "operationId": "createFuelStationService",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "address",
                                    "opening_time",
                                    "closing_time",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "fa fa-halua-kha"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/fuel-station-services/{perPage}": {
            "get": {
                "tags": [
                    "fuel_station_service_management"
                ],
                "summary": "This method is to get fuel station services ",
                "description": "This method is to get fuel station services",
                "operationId": "getFuelStationServices",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/fuel-station-services/get/all": {
            "get": {
                "tags": [
                    "fuel_station_service_management"
                ],
                "summary": "This method is to get fuel station services ",
                "description": "This method is to get fuel station services",
                "operationId": "getFuelStationServicesAll",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/fuel-station-services/get/all": {
            "get": {
                "tags": [
                    "client.fuel_station_service_management"
                ],
                "summary": "This method is to get fuel station services client",
                "description": "This method is to get fuel station services client",
                "operationId": "getFuelStationServicesAllClient",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/fuel-station-services/{id}": {
            "delete": {
                "tags": [
                    "fuel_station_service_management"
                ],
                "summary": "This method is to delete fuel station service by id",
                "description": "This method is to delete fuel station service by id",
                "operationId": "deleteFuelStationServiceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-affiliations": {
            "put": {
                "tags": [
                    "z.unused"
                ],
                "summary": "This method is to update garage affiliation",
                "description": "This method is to update garage affiliation",
                "operationId": "updateGarageAffiliation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "garage_id",
                                    "affiliation_id",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "affiliation_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "garage_affiliation_management"
                ],
                "summary": "This method is to store garage affiliation",
                "description": "This method is to store garage affiliation",
                "operationId": "createGarageAffiliation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "garage_id",
                                    "affiliation_id",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "affiliation_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-affiliations/{perPage}": {
            "get": {
                "tags": [
                    "garage_affiliation_management"
                ],
                "summary": "This method is to get garage affiliations ",
                "description": "This method is to get garage affiliations",
                "operationId": "getGarageAffiliations",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-affiliations/{garage_id}/{perPage}": {
            "get": {
                "tags": [
                    "garage_affiliation_management"
                ],
                "summary": "This method is to get garage affiliations ",
                "description": "This method is to get garage affiliations",
                "operationId": "getGarageAffiliationsByGarageId",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-affiliations/get/all/{garage_id}": {
            "get": {
                "tags": [
                    "garage_affiliation_management"
                ],
                "summary": "This method is to get garage affiliations ",
                "description": "This method is to get garage affiliations",
                "operationId": "getGarageAffiliationsAllByGarageId",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-affiliations/{id}": {
            "delete": {
                "tags": [
                    "garage_affiliation_management"
                ],
                "summary": "This method is to delete garage affiliation by id",
                "description": "This method is to delete garage affiliation by id",
                "operationId": "deleteGarageAffiliationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-automobile-makes/all/{garage_id}": {
            "get": {
                "tags": [
                    "garage_automobile_management.make"
                ],
                "summary": "This method is to get automobile makes  by garage  id",
                "description": "This method is to get automobile makes by  garage id",
                "operationId": "getGarageAutomobileMakesAll",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-galleries/{garage_id}": {
            "get": {
                "tags": [
                    "garage_gallery_management"
                ],
                "summary": "This method is to get garage galleries",
                "description": "This method is to get garage galleries",
                "operationId": "getGarageGalleries",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "garage_gallery_management"
                ],
                "summary": "This method is to store garage gallery",
                "description": "This method is to store garage gallery",
                "operationId": "createGarageGallery",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "images[]"
                                ],
                                "properties": {
                                    "images[]": {
                                        "description": "array of images to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "file"
                                        },
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/garage-galleries/{garage_id}": {
            "get": {
                "tags": [
                    "client.garage_gallery_management"
                ],
                "summary": "This method is to get garage galleries",
                "description": "This method is to get garage galleries",
                "operationId": "getGarageGalleriesClient",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-galleries/{garage_id}/{id}": {
            "delete": {
                "tags": [
                    "garage_gallery_management"
                ],
                "summary": "This method is to delete garage gallery by id",
                "description": "This method is to delete garage gellery by id",
                "operationId": "deleteGarageGalleryById",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-packages": {
            "put": {
                "tags": [
                    "garage_package_management"
                ],
                "summary": "This method is to update garage package",
                "description": "This method is to update garage package",
                "operationId": "updateGaragePackage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "garage_id",
                                    "name",
                                    "description",
                                    "price"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10.99"
                                    },
                                    "sub_service_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ]
                                    },
                                    "is_active": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "garage_package_management"
                ],
                "summary": "This method is to store garage packages",
                "description": "This method is to store garage packages",
                "operationId": "createGaragePackage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "garage_id",
                                    "name",
                                    "description",
                                    "price"
                                ],
                                "properties": {
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10.99"
                                    },
                                    "sub_service_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ]
                                    },
                                    "is_active": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-packages/{garage_id}/{perPage}": {
            "get": {
                "tags": [
                    "garage_package_management"
                ],
                "summary": "This method is to get  garage packages ",
                "description": "This method is to get garage packages",
                "operationId": "getGaragePackages",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-packages/get/all/{garage_id}": {
            "get": {
                "tags": [
                    "basics"
                ],
                "summary": "This method is to get  garage packages all ",
                "description": "This method is to get garage packages all",
                "operationId": "getGaragePackagesAll",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-packages/single/{garage_id}/{id}": {
            "get": {
                "tags": [
                    "garage_package_management"
                ],
                "summary": "This method is to  get garage package by id",
                "description": "This method is to get garage package by id",
                "operationId": "getGaragePackageById",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "garage_package_management"
                ],
                "summary": "This method is to  delete garage package by id",
                "description": "This method is to delete garage package by id",
                "operationId": "deleteGaragePackageById",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-rules": {
            "patch": {
                "tags": [
                    "garage_rules_management"
                ],
                "summary": "This method is to update garage rules",
                "description": "This method is to update garage rules",
                "operationId": "updateGarageRules",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "garage_id",
                                    "standard_lead_time",
                                    "booking_accept_start_time",
                                    "booking_accept_end_time",
                                    "block_out_days"
                                ],
                                "properties": {
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "standard_lead_time": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "booking_accept_start_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10:10"
                                    },
                                    "booking_accept_end_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10:10"
                                    },
                                    "block_out_days": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "2019-06-29",
                                            "2019-07-29"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-rules/{garage_id}": {
            "get": {
                "tags": [
                    "garage_rules_management"
                ],
                "summary": "This method is to get garage rules ",
                "description": "This method is to get garage rules",
                "operationId": "getGarageRules",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-services/{garage_id}/{perPage}": {
            "get": {
                "tags": [
                    "garage_service_management"
                ],
                "summary": "This method is to get automobile Services ",
                "description": "This method is to get automobile Services",
                "operationId": "getGarageServices",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-sub-services/{garage_id}/{garage_service_id}/{perPage}": {
            "get": {
                "tags": [
                    "garage_service_management"
                ],
                "summary": "This method is to get automobile Services ",
                "description": "This method is to get automobile Services",
                "operationId": "getGarageSubServices",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "garage_service_id",
                        "in": "path",
                        "description": "garage_service_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-sub-service-prices": {
            "post": {
                "tags": [
                    "garage_sub_service_price_management"
                ],
                "summary": "This method is to store garage sub service price",
                "description": "This method is to store garage sub service price",
                "operationId": "createGarageSubServicePrice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "garage_id",
                                    "garage_sub_service_id",
                                    "garage_sub_service_prices"
                                ],
                                "properties": {
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_sub_service_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_sub_service_prices": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "automobile_make_id": 1,
                                                "price": "10"
                                            },
                                            {
                                                "automobile_make_id": null,
                                                "price": "20"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-service-prices": {
            "put": {
                "tags": [
                    "garage_sub_service_price_management"
                ],
                "summary": "This method is to update garage sub service price",
                "description": "This method is to update garage sub service price",
                "operationId": "updateGarageSubServicePrice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "garage_id",
                                    "garage_sub_service_id",
                                    "garage_sub_service_prices"
                                ],
                                "properties": {
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_sub_service_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_sub_service_prices": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "id": 1,
                                                "automobile_make_id": 1,
                                                "price": "10"
                                            },
                                            {
                                                "id": 2,
                                                "automobile_make_id": null,
                                                "price": "20"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-service-prices/{id}": {
            "delete": {
                "tags": [
                    "garage_sub_service_price_management"
                ],
                "summary": "This method is to delete garage sub service price by id",
                "description": "This method is to delete garage sub service price by id",
                "operationId": "deleteGarageSubServicePriceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-service-prices/by-garage-sub-service/{id}": {
            "delete": {
                "tags": [
                    "garage_sub_service_price_management"
                ],
                "summary": "This method is to delete garage sub service price by garage sub service id",
                "description": "This method is to delete garage sub service price by garage sub service id",
                "operationId": "deleteGarageSubServicePriceByGarageSubServiceId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-times": {
            "patch": {
                "tags": [
                    "garage_times_management"
                ],
                "summary": "This method is to update garage times",
                "description": "This method is to update garage times",
                "operationId": "updateGarageTimes",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "garage_id",
                                    "times"
                                ],
                                "properties": {
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "times": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "day": 0,
                                                "opening_time": "10:10:00",
                                                "closing_time": "10:15:00",
                                                "is_closed": true
                                            },
                                            {
                                                "day": 1,
                                                "opening_time": "10:10:00",
                                                "closing_time": "10:15:00",
                                                "is_closed": true
                                            },
                                            {
                                                "day": 2,
                                                "opening_time": "10:10:00",
                                                "closing_time": "10:15:00",
                                                "is_closed": true
                                            },
                                            {
                                                "day": 3,
                                                "opening_time": "10:10:00",
                                                "closing_time": "10:15:00",
                                                "is_closed": true
                                            },
                                            {
                                                "day": 4,
                                                "opening_time": "10:10:00",
                                                "closing_time": "10:15:00",
                                                "is_closed": true
                                            },
                                            {
                                                "day": 5,
                                                "opening_time": "10:10:00",
                                                "closing_time": "10:15:00",
                                                "is_closed": true
                                            },
                                            {
                                                "day": 6,
                                                "opening_time": "10:10:00",
                                                "closing_time": "10:15:00",
                                                "is_closed": true
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-times/{garage_id}": {
            "get": {
                "tags": [
                    "garage_times_management"
                ],
                "summary": "This method is to get garage times ",
                "description": "This method is to get garage times",
                "operationId": "getGarageTimes",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garage-image-multiple": {
            "post": {
                "tags": [
                    "garage_management"
                ],
                "summary": "This method is to store garage gallery",
                "description": "This method is to store garage gallery",
                "operationId": "createGarageImageMultiple",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "images[]"
                                ],
                                "properties": {
                                    "images[]": {
                                        "description": "array of images to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "file"
                                        },
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/auth/register-with-garage": {
            "post": {
                "tags": [
                    "garage_management"
                ],
                "summary": "This method is to store user with garage",
                "description": "This method is to store user with garage",
                "operationId": "registerUserWithGarage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user",
                                    "garage",
                                    "service"
                                ],
                                "properties": {
                                    "user": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "first_Name": "Rifat",
                                            "last_Name": "Al-Ashwad",
                                            "email": "rifatalashwad@gmail.com",
                                            "password": "12345678",
                                            "password_confirmation": "12345678",
                                            "phone": "01771034383",
                                            "image": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "address_line_1": "Dhaka",
                                            "address_line_2": "Dinajpur",
                                            "country": "Bangladesh",
                                            "city": "Dhaka",
                                            "postcode": "Dinajpur",
                                            "lat": "12",
                                            "long": "12"
                                        }
                                    },
                                    "garage": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "name": "ABCD Garage",
                                            "about": "Best Garage in Dhaka",
                                            "web_page": "https://www.facebook.com/",
                                            "phone": "01771034383",
                                            "email": "rifatalashwad@gmail.com",
                                            "additional_information": "No Additional Information",
                                            "address_line_1": "Dhaka",
                                            "address_line_2": "Dinajpur",
                                            "lat": "23.704263332849386",
                                            "long": "90.44707059805279",
                                            "country": "Bangladesh",
                                            "city": "Dhaka",
                                            "currency": "BDT",
                                            "postcode": "Dinajpur",
                                            "logo": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "image": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "images": [
                                                "/a",
                                                "/b",
                                                "/c"
                                            ],
                                            "is_mobile_garage": true,
                                            "wifi_available": true,
                                            "labour_rate": 500
                                        }
                                    },
                                    "service": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "automobile_category_id": 1,
                                                "services": [
                                                    {
                                                        "id": 1,
                                                        "checked": true,
                                                        "sub_services": [
                                                            {
                                                                "id": 1,
                                                                "checked": true
                                                            },
                                                            {
                                                                "id": 2,
                                                                "checked": false
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "automobile_makes": [
                                                    {
                                                        "id": 1,
                                                        "checked": true,
                                                        "models": [
                                                            {
                                                                "id": 1,
                                                                "checked": true
                                                            },
                                                            {
                                                                "id": 2,
                                                                "checked": false
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garages": {
            "put": {
                "tags": [
                    "garage_management"
                ],
                "summary": "This method is to update user with garage",
                "description": "This method is to update user with garage",
                "operationId": "updateGarage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user",
                                    "garage",
                                    "service"
                                ],
                                "properties": {
                                    "user": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "id": 1,
                                            "first_Name": "Rifat",
                                            "last_Name": "Al-Ashwad",
                                            "email": "rifatalashwad@gmail.com",
                                            "password": "12345678",
                                            "password_confirmation": "12345678",
                                            "phone": "01771034383",
                                            "image": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "address_line_1": "Dhaka",
                                            "address_line_2": "Dinajpur",
                                            "country": "Bangladesh",
                                            "city": "Dhaka",
                                            "postcode": "Dinajpur",
                                            "lat": "12",
                                            "long": "12"
                                        }
                                    },
                                    "garage": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "id": 1,
                                            "name": "ABCD Garage",
                                            "about": "Best Garage in Dhaka",
                                            "web_page": "https://www.facebook.com/",
                                            "phone": "01771034383",
                                            "email": "rifatalashwad@gmail.com",
                                            "additional_information": "No Additional Information",
                                            "address_line_1": "Dhaka",
                                            "address_line_2": "Dinajpur",
                                            "lat": "23.704263332849386",
                                            "long": "90.44707059805279",
                                            "country": "Bangladesh",
                                            "city": "Dhaka",
                                            "postcode": "Dinajpur",
                                            "logo": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "image": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "images": [
                                                "/a",
                                                "/b",
                                                "/c"
                                            ],
                                            "is_mobile_garage": true,
                                            "wifi_available": true,
                                            "labour_rate": 500
                                        }
                                    },
                                    "service": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "automobile_category_id": 1,
                                                "services": [
                                                    {
                                                        "id": 1,
                                                        "checked": true,
                                                        "sub_services": [
                                                            {
                                                                "id": 1,
                                                                "checked": true
                                                            },
                                                            {
                                                                "id": 2,
                                                                "checked": false
                                                            }
                                                        ]
                                                    }
                                                ],
                                                "automobile_makes": [
                                                    {
                                                        "id": 1,
                                                        "checked": true,
                                                        "models": [
                                                            {
                                                                "id": 1,
                                                                "checked": true
                                                            },
                                                            {
                                                                "id": 2,
                                                                "checked": false
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garages/{perPage}": {
            "get": {
                "tags": [
                    "garage_management"
                ],
                "summary": "This method is to get garages",
                "description": "This method is to get garages",
                "operationId": "getGarages",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "country_code",
                        "in": "query",
                        "description": "country_code",
                        "required": true,
                        "example": "country_code"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "address",
                        "required": true,
                        "example": "address"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "city",
                        "required": true,
                        "example": "city"
                    },
                    {
                        "name": "start_lat",
                        "in": "query",
                        "description": "start_lat",
                        "required": true,
                        "example": "3"
                    },
                    {
                        "name": "end_lat",
                        "in": "query",
                        "description": "end_lat",
                        "required": true,
                        "example": "2"
                    },
                    {
                        "name": "start_long",
                        "in": "query",
                        "description": "start_long",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "end_long",
                        "in": "query",
                        "description": "end_long",
                        "required": true,
                        "example": "4"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garages/single/{id}": {
            "get": {
                "tags": [
                    "garage_management"
                ],
                "summary": "This method is to get garage by id",
                "description": "This method is to get garage by id",
                "operationId": "getGarageById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garages/{id}": {
            "delete": {
                "tags": [
                    "garage_management"
                ],
                "summary": "This method is to delete garage by id",
                "description": "This method is to delete garage by id",
                "operationId": "deleteGarageById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/available-countries": {
            "get": {
                "tags": [
                    "basics"
                ],
                "summary": "This method is to get available country list",
                "description": "This method is to get available country list",
                "operationId": "getAvailableCountries",
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/available-cities/{country_code}": {
            "get": {
                "tags": [
                    "basics"
                ],
                "summary": "This method is to get available city list",
                "description": "This method is to get available city list",
                "operationId": "getAvailableCities",
                "parameters": [
                    {
                        "name": "country_code",
                        "in": "path",
                        "description": "country_code",
                        "required": true,
                        "example": "country_code"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/garages/by-garage-owner/all": {
            "get": {
                "tags": [
                    "garage_management"
                ],
                "summary": "This method is to get garages",
                "description": "This method is to get garages",
                "operationId": "getAllGaragesByGarageOwner",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoice-image": {
            "post": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to store invoice logo",
                "description": "This method is to store invoice logo",
                "operationId": "createInvoiceImage",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "image to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoices": {
            "put": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to update invoice",
                "description": "This method is to update invoice",
                "operationId": "updateInvoice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "logo": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "image.jpg"
                                    },
                                    "invoice_title": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "invoice_title"
                                    },
                                    "invoice_summary": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "invoice_summary"
                                    },
                                    "reminder_dates": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "0",
                                            "15",
                                            "30"
                                        ]
                                    },
                                    "send_reminder": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "0"
                                    },
                                    "business_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "business_name"
                                    },
                                    "business_address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "business_address"
                                    },
                                    "sub_total": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "900"
                                    },
                                    "total_amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "900"
                                    },
                                    "invoice_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "discount_description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    },
                                    "discound_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "fixed"
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "invoice_reference": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "57856465"
                                    },
                                    "status": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "draft"
                                    },
                                    "footer_text": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "footer_text"
                                    },
                                    "shareable_link": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "shareable_link"
                                    },
                                    "note": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "note"
                                    },
                                    "business_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "note"
                                    },
                                    "property_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "landlord_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "tenant_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "client_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "invoice_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "id": "1",
                                                "name": "name",
                                                "description": "description",
                                                "quantity": "1",
                                                "price": "1.1",
                                                "tax": "20",
                                                "amount": "300"
                                            },
                                            {
                                                "id": "",
                                                "name": "name",
                                                "description": "description",
                                                "quantity": "1",
                                                "price": "1.1",
                                                "tax": "20",
                                                "amount": "300"
                                            }
                                        ]
                                    },
                                    "invoice_payments": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "id": "1",
                                                "amount": "10",
                                                "payment_method": "payment_method",
                                                "payment_date": "2019-06-29"
                                            },
                                            {
                                                "id": "",
                                                "amount": "10",
                                                "payment_method": "payment_method",
                                                "payment_date": "2019-06-29"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to store invoice",
                "description": "This method is to store invoice",
                "operationId": "createInvoice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "logo": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "image.jpg"
                                    },
                                    "invoice_title": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "invoice_title"
                                    },
                                    "invoice_summary": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "invoice_summary"
                                    },
                                    "reminder_dates": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "0",
                                            "15",
                                            "30"
                                        ]
                                    },
                                    "send_reminder": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "0"
                                    },
                                    "business_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "business_name"
                                    },
                                    "business_address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "business_address"
                                    },
                                    "sub_total": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "900"
                                    },
                                    "total_amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "900"
                                    },
                                    "invoice_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "invoice_reference": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "57856465"
                                    },
                                    "discount_description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    },
                                    "discound_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "fixed"
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "status": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "draft"
                                    },
                                    "footer_text": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "footer_text"
                                    },
                                    "shareable_link": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "shareable_link"
                                    },
                                    "note": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "note"
                                    },
                                    "business_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "note"
                                    },
                                    "landlord_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "property_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "tenant_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "client_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "invoice_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "name": "name",
                                                "description": "description",
                                                "quantity": "1",
                                                "price": "1.1",
                                                "tax": "20",
                                                "amount": "300"
                                            },
                                            {
                                                "name": "name",
                                                "description": "description",
                                                "quantity": "1",
                                                "price": "1.1",
                                                "tax": "20",
                                                "amount": "300"
                                            },
                                            {
                                                "name": "name",
                                                "description": "description",
                                                "quantity": "1",
                                                "price": "1.1",
                                                "tax": "20",
                                                "amount": "300",
                                                "repair_id": 1
                                            }
                                        ]
                                    },
                                    "invoice_payments": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "amount": "10",
                                                "payment_method": "payment_method",
                                                "payment_date": "2019-06-29"
                                            },
                                            {
                                                "amount": "10",
                                                "payment_method": "payment_method",
                                                "payment_date": "2019-06-29"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoices/change/status": {
            "put": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to update invoice",
                "description": "This method is to update invoice",
                "operationId": "updateInvoiceStatus",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "status": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "draft"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoices/mark/send": {
            "put": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to update invoice",
                "description": "This method is to update invoice",
                "operationId": "invoiceMarkSend",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoices/send": {
            "put": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to update invoice",
                "description": "This method is to update invoice",
                "operationId": "sendInvoice",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "from": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@gmail.com"
                                    },
                                    "to": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "test1@gmail.com",
                                            "test2@gmail.com"
                                        ]
                                    },
                                    "subject": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "subject"
                                    },
                                    "message": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "message"
                                    },
                                    "copy_to_myself": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "0"
                                    },
                                    "attach_pdf": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoices/{perPage}": {
            "get": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to get invoices ",
                "description": "This method is to get invoices",
                "operationId": "getInvoices",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status",
                        "required": true,
                        "example": "status"
                    },
                    {
                        "name": "invoice_reference",
                        "in": "query",
                        "description": "invoice_reference",
                        "required": true,
                        "example": "1374"
                    },
                    {
                        "name": "landlord_id",
                        "in": "query",
                        "description": "landlord_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "description": "tenant_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "description": "client_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "company_name",
                        "in": "query",
                        "description": "company_name",
                        "required": true,
                        "example": "company_name"
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "description": "property_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "min_total_due",
                        "in": "query",
                        "description": "min_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "max_total_due",
                        "in": "query",
                        "description": "max_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_ids[]",
                        "in": "query",
                        "description": "property_ids",
                        "required": true,
                        "example": "1,2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoices/get/pdf": {
            "get": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to get invoices ",
                "description": "This method is to get invoices",
                "operationId": "getInvoicesPdf",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status",
                        "required": true,
                        "example": "status"
                    },
                    {
                        "name": "invoice_reference",
                        "in": "query",
                        "description": "invoice_reference",
                        "required": true,
                        "example": "1374"
                    },
                    {
                        "name": "landlord_id",
                        "in": "query",
                        "description": "landlord_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "description": "tenant_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "description": "client_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "description": "property_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "min_total_due",
                        "in": "query",
                        "description": "min_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "max_total_due",
                        "in": "query",
                        "description": "max_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_ids[]",
                        "in": "query",
                        "description": "property_ids",
                        "required": true,
                        "example": "1,2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoices/get/all": {
            "get": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to get invoices ",
                "description": "This method is to get invoices",
                "operationId": "getAllInvoices",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "status",
                        "required": true,
                        "example": "status"
                    },
                    {
                        "name": "invoice_reference",
                        "in": "query",
                        "description": "invoice_reference",
                        "required": true,
                        "example": "1374"
                    },
                    {
                        "name": "landlord_id",
                        "in": "query",
                        "description": "landlord_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "description": "tenant_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "description": "client_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "company_name",
                        "in": "query",
                        "description": "company_name",
                        "required": true,
                        "example": "company_name"
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "description": "property_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_ids[]",
                        "in": "query",
                        "description": "property_ids",
                        "required": true,
                        "example": "1,2"
                    },
                    {
                        "name": "min_total_due",
                        "in": "query",
                        "description": "min_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "total_due_max",
                        "in": "query",
                        "description": "total_due",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoices/get/single/{id}": {
            "get": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to get invoice by id",
                "description": "This method is to get invoice by id",
                "operationId": "getInvoiceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoices/get/single-by-reference/{reference}": {
            "get": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to get invoice by id",
                "description": "This method is to get invoice by id",
                "operationId": "getInvoiceByReference",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "reference",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoices/{id}": {
            "delete": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to delete invoice by id",
                "description": "This method is to delete invoice by id",
                "operationId": "deleteInvoiceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/invoice-items/{invoice_id}/{id}": {
            "delete": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to delete invoice item by id",
                "description": "This method is to delete invoice item by id",
                "operationId": "deleteInvoiceItemById",
                "parameters": [
                    {
                        "name": "invoice_id",
                        "in": "path",
                        "description": "invoice_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/invoices/generate/invoice-reference": {
            "get": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to generate invoice reference",
                "description": "This method is to generate invoice reference",
                "operationId": "generateInvoiceReference",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoices/validate/invoice-reference/{invoice_reference}": {
            "get": {
                "tags": [
                    "property_management.invoice_management"
                ],
                "summary": "This method is to validate invoice number",
                "description": "This method is to validate invoice number",
                "operationId": "validateInvoiceReference",
                "parameters": [
                    {
                        "name": "invoice_reference",
                        "in": "path",
                        "description": "invoice_reference",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoice-payments": {
            "put": {
                "tags": [
                    "property_management.invoice_payment_management"
                ],
                "summary": "This method is to update invoice",
                "description": "This method is to update invoice",
                "operationId": "updateInvoicePayment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "bkash"
                                    },
                                    "payment_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "note": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "note"
                                    },
                                    "invoice_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "receipt_by": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "receipt_by"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.invoice_payment_management"
                ],
                "summary": "This method is to store invoice",
                "description": "This method is to store invoice",
                "operationId": "createInvoicePayment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "bkash"
                                    },
                                    "payment_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "note": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "note"
                                    },
                                    "invoice_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "receipt_by": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "receipt_by"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoice-payments/{perPage}": {
            "get": {
                "tags": [
                    "property_management.invoice_payment_management"
                ],
                "summary": "This method is to get invoice-payments ",
                "description": "This method is to get invoice-payments",
                "operationId": "getInvoicePayments",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "invoice_id",
                        "in": "query",
                        "description": "invoice_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "min_amount",
                        "in": "query",
                        "description": "min_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "max_amount",
                        "in": "query",
                        "description": "max_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "payment_method",
                        "in": "query",
                        "description": "payment_method",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoice-payments/get/single/{invoice_id}/{id}": {
            "get": {
                "tags": [
                    "property_management.invoice_payment_management"
                ],
                "summary": "This method is to get invoice by id",
                "description": "This method is to get invoice by id",
                "operationId": "getInvoicePaymentById",
                "parameters": [
                    {
                        "name": "invoice_id",
                        "in": "path",
                        "description": "invoice_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2.0/invoice-payments/get/single/{id}": {
            "get": {
                "tags": [
                    "property_management.invoice_payment_management"
                ],
                "summary": "This method is to get invoice by id",
                "description": "This method is to get invoice by id",
                "operationId": "getInvoicePaymentByIdv2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoice-payments/{invoice_id}/{id}": {
            "delete": {
                "tags": [
                    "property_management.invoice_payment_management"
                ],
                "summary": "This method is to delete invoice by id",
                "description": "This method is to delete invoice by id",
                "operationId": "deleteInvoicePaymentById",
                "parameters": [
                    {
                        "name": "invoice_id",
                        "in": "path",
                        "description": "invoice_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/invoice-payments/{id}": {
            "delete": {
                "tags": [
                    "property_management.invoice_payment_management"
                ],
                "summary": "This method is to delete invoice by id",
                "description": "This method is to delete invoice by id",
                "operationId": "deleteInvoicePaymentByIdV2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/invoice-payments/send-receipt-email": {
            "post": {
                "tags": [
                    "property_management.invoice_payment_receipt_management"
                ],
                "summary": "This method is to send invoice payment receipt",
                "description": "This method is to send invoice payment receipt",
                "operationId": "sendPaymentReceipt",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "invoice_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "invoice_payment_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "from": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test@gmail.com"
                                    },
                                    "to": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "test1@gmail.com",
                                            "test2@gmail.com"
                                        ]
                                    },
                                    "subject": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "subject"
                                    },
                                    "message": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "message"
                                    },
                                    "copy_to_myself": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "0"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoice-payment-receipts/{perPage}": {
            "get": {
                "tags": [
                    "property_management.invoice_payment_receipt_management"
                ],
                "summary": "This method is to get invoice payment receipt ",
                "description": "This method is to get invoice payment receipt",
                "operationId": "getInvoicePaymentReceipts",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "invoice_id",
                        "in": "query",
                        "description": "invoice_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoice-payment-receipts/get/single/{id}": {
            "get": {
                "tags": [
                    "property_management.invoice_payment_receipt_management"
                ],
                "summary": "This method is to get invoice payment receipt by id",
                "description": "This method is to get invoice payment receipt by id",
                "operationId": "getInvoicePaymentReceiptById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoice-reminders/number-todate-convert": {
            "post": {
                "tags": [
                    "property_management.invoice_reminder_management"
                ],
                "summary": "This method is to store invoice reminder number to date convert",
                "description": "This method is to store invoice reminder number to date convert",
                "operationId": "createInvoiceReminderNumberDateConvert",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "send_reminder": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "reminder_date_amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "14"
                                    },
                                    "invoice_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoice-reminders": {
            "put": {
                "tags": [
                    "property_management.invoice_reminder_management"
                ],
                "summary": "This method is to update invoice reminder",
                "description": "This method is to update invoice reminder",
                "operationId": "updateInvoiceReminder",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "send_reminder": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "reminder_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.invoice_reminder_management"
                ],
                "summary": "This method is to store invoice reminder",
                "description": "This method is to store invoice reminder",
                "operationId": "createInvoiceReminder",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "send_reminder": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "reminder_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "invoice_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoice-reminders/{perPage}": {
            "get": {
                "tags": [
                    "property_management.invoice_reminder_management"
                ],
                "summary": "This method is to get invoice reminders ",
                "description": "This method is to get invoice reminders",
                "operationId": "getInvoiceReminders",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "description": "tenant_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "landlord_id",
                        "in": "query",
                        "description": "landlord_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoice-reminders/get/single/{id}": {
            "get": {
                "tags": [
                    "property_management.invoice_reminder_management"
                ],
                "summary": "This method is to get invoice reminder by id",
                "description": "This method is to get invoice reminder by id",
                "operationId": "getInvoiceReminderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/invoice-reminders/{id}": {
            "delete": {
                "tags": [
                    "property_management.invoice_reminder_management"
                ],
                "summary": "This method is to delete invoice reminder by id",
                "description": "This method is to delete invoice reminder by id",
                "operationId": "deleteInvoiceReminderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/invoice-reminders/without-pin/{id}": {
            "delete": {
                "tags": [
                    "property_management.invoice_reminder_management"
                ],
                "summary": "This method is to delete invoice reminder by id",
                "description": "This method is to delete invoice reminder by id",
                "operationId": "deleteInvoiceReminderWithoutById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/pre-bookings/{garage_id}/{perPage}": {
            "get": {
                "tags": [
                    "pre_booking_management"
                ],
                "summary": "This method is to get pre bookings ",
                "description": "This method is to get pre bookings by garage id. only supported prebooking will show. the garage must have the sub service selected in the pre booking",
                "operationId": "getPreBookings",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "country_or_postcode",
                        "in": "query",
                        "description": "country_or_postcode",
                        "required": true,
                        "example": "country_or_postcode"
                    },
                    {
                        "name": "start_lat",
                        "in": "query",
                        "description": "start_lat",
                        "required": true,
                        "example": "3"
                    },
                    {
                        "name": "end_lat",
                        "in": "query",
                        "description": "end_lat",
                        "required": true,
                        "example": "2"
                    },
                    {
                        "name": "start_long",
                        "in": "query",
                        "description": "start_long",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "end_long",
                        "in": "query",
                        "description": "end_long",
                        "required": true,
                        "example": "4"
                    },
                    {
                        "name": "automobile_make_ids[]",
                        "in": "query",
                        "description": "automobile_make_ids",
                        "required": true,
                        "example": "1,2"
                    },
                    {
                        "name": "sub_service_ids[]",
                        "in": "query",
                        "description": "sub_service_id",
                        "required": true,
                        "example": "1,2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/pre-bookings/single/{garage_id}/{id}": {
            "get": {
                "tags": [
                    "pre_booking_management"
                ],
                "summary": "This method is to get pre booking by garae id and id ",
                "description": "This method is to get pre bookings by garage id and id. only supported prebooking will show. the garage must have the sub service selected in the pre booking",
                "operationId": "getPreBookingById",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/job-bids": {
            "put": {
                "tags": [
                    "job_bid_management"
                ],
                "summary": "This method is to update job bid",
                "description": "This method is to update job bid",
                "operationId": "updateJobBid",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "garage_id",
                                    "pre_booking_id",
                                    "price",
                                    "offer_template",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "pre_booking_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10.99"
                                    },
                                    "offer_template": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "offer template goes here"
                                    },
                                    "job_start_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "job_start_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "08:10"
                                    },
                                    "job_end_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10:10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "job_bid_management"
                ],
                "summary": "This method is to store job bid",
                "description": "This method is to store job bid",
                "operationId": "createJobBid",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "garage_id",
                                    "pre_booking_id",
                                    "price",
                                    "offer_template",
                                    "description",
                                    "job_start_date",
                                    "job_start_time",
                                    "job_end_time"
                                ],
                                "properties": {
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "pre_booking_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10.99"
                                    },
                                    "offer_template": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "offer template goes here"
                                    },
                                    "job_start_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "job_start_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "08:10"
                                    },
                                    "job_end_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10:10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/job-bids/{garage_id}/{perPage}": {
            "get": {
                "tags": [
                    "job_bid_management"
                ],
                "summary": "This method is to get job bids",
                "description": "This method is to get job bids",
                "operationId": "getJobBids",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/job-bids/single/{garage_id}/{id}": {
            "get": {
                "tags": [
                    "job_bid_management"
                ],
                "summary": "This method is to get job bid by garae id and id ",
                "description": "This method is to get job bid by garage id and id.",
                "operationId": "getJobBidById",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/job-bids/{garage_id}/{id}": {
            "delete": {
                "tags": [
                    "job_bid_management"
                ],
                "summary": "This method is to  delete job bid by id",
                "description": "This method is to delete job bid by id",
                "operationId": "deleteJobBidById",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/jobs/booking-to-job": {
            "patch": {
                "tags": [
                    "job_management"
                ],
                "summary": "This method is to convert booking to job",
                "description": "This method is to convert booking to job",
                "operationId": "bookingToJob",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "booking_id",
                                    "coupon_code",
                                    "garage_id",
                                    "discount_type",
                                    "discount_amount",
                                    "price",
                                    "job_start_date",
                                    "job_start_time",
                                    "job_end_time",
                                    "status"
                                ],
                                "properties": {
                                    "booking_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "coupon_code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "123456"
                                    },
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "percentage"
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "30"
                                    },
                                    "job_start_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "job_start_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "08:10"
                                    },
                                    "job_end_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10:10"
                                    },
                                    "status": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "pending"
                                    },
                                    "transmission": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "transmission"
                                    },
                                    "fuel": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Fuel"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/jobs": {
            "put": {
                "tags": [
                    "job_management"
                ],
                "summary": "This method is to update job",
                "description": "This method is to update job",
                "operationId": "updateJob",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "garage_id",
                                    "coupon_code",
                                    "automobile_make_id",
                                    "automobile_model_id",
                                    "car_registration_no",
                                    "car_registration_year",
                                    "job_sub_service_ids",
                                    "job_garage_package_ids",
                                    "job_start_time",
                                    "job_end_time"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "coupon_code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "123456"
                                    },
                                    "automobile_make_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "automobile_model_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "car_registration_no": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "r-00011111"
                                    },
                                    "car_registration_year": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "job_sub_service_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ]
                                    },
                                    "job_garage_package_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ]
                                    },
                                    "discount_type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "percentage"
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "60"
                                    },
                                    "job_start_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "job_start_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "08:10"
                                    },
                                    "job_end_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10:10"
                                    },
                                    "status": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "pending"
                                    },
                                    "transmission": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "transmission"
                                    },
                                    "fuel": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Fuel"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/jobs/change-status": {
            "put": {
                "tags": [
                    "job_management"
                ],
                "summary": "This method is to change job status",
                "description": "This method is to change job status",
                "operationId": "changeJobStatus",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "garage_id",
                                    "status"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "status": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "pending"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/jobs/{garage_id}/{perPage}": {
            "get": {
                "tags": [
                    "job_management"
                ],
                "summary": "This method is to get  jobs ",
                "description": "This method is to get jobs",
                "operationId": "getJobs",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/jobs/single/{garage_id}/{id}": {
            "get": {
                "tags": [
                    "job_management"
                ],
                "summary": "This method is to  get job by id",
                "description": "This method is to get job by id",
                "operationId": "getJobById",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/jobs/{garage_id}/{id}": {
            "delete": {
                "tags": [
                    "job_management"
                ],
                "summary": "This method is to  delete job by id",
                "description": "This method is to delete job by id",
                "operationId": "deleteJobById",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/jobs/payment": {
            "patch": {
                "tags": [
                    "job_management.payment"
                ],
                "summary": "This method is to add payment",
                "description": "This method is to add payment",
                "operationId": "addPayment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "job_id",
                                    "garage_id",
                                    "payments"
                                ],
                                "properties": {
                                    "job_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "payments": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "payment_type_id": 1,
                                                "amount": 50
                                            },
                                            {
                                                "payment_type_id": 1,
                                                "amount": 60
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/jobs/payment/{garage_id}{id}": {
            "delete": {
                "tags": [
                    "job_management.payment"
                ],
                "summary": "This method is to delete payment by id",
                "description": "This method is to delete payment by id",
                "operationId": "deletePaymentById",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/landlord-image": {
            "post": {
                "tags": [
                    "property_management.landlord_management"
                ],
                "summary": "This method is to store landlord logo",
                "description": "This method is to store landlord logo",
                "operationId": "createLandlordImage",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "image to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/landlords": {
            "put": {
                "tags": [
                    "property_management.landlord_management"
                ],
                "summary": "This method is to update landlord",
                "description": "This method is to update landlord",
                "operationId": "updateLandlord",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "image.jpg"
                                    },
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "last_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Al"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "rifatalashwad0@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "01771034383"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "dhaka"
                                    },
                                    "address_line_2": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "dinajpur"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "Bangladesh"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "Dhaka"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.landlord_management"
                ],
                "summary": "This method is to store landlord",
                "description": "This method is to store landlord",
                "operationId": "createLandlord",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "image.jpg"
                                    },
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "last_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Al"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "rifatalashwad0@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "01771034383"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "dhaka"
                                    },
                                    "address_line_2": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "dinajpur"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "Bangladesh"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "Dhaka"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/landlords/{perPage}": {
            "get": {
                "tags": [
                    "property_management.landlord_management"
                ],
                "summary": "This method is to get landlords ",
                "description": "This method is to get landlords",
                "operationId": "getLandlords",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "description": "property_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_ids[]",
                        "in": "query",
                        "description": "property_ids",
                        "required": true,
                        "example": "1,2"
                    },
                    {
                        "name": "min_total_due",
                        "in": "query",
                        "description": "min_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "max_total_due",
                        "in": "query",
                        "description": "max_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "min_total_over_due",
                        "in": "query",
                        "description": "min_total_over_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "max_total_over_due",
                        "in": "query",
                        "description": "max_total_over_due",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/landlords/optimized/{perPage}": {
            "get": {
                "tags": [
                    "property_management.landlord_management"
                ],
                "summary": "This method is to get landlords ",
                "description": "This method is to get landlords",
                "operationId": "getLandlordsOptimized",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "description": "property_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_ids[]",
                        "in": "query",
                        "description": "property_ids",
                        "required": true,
                        "example": "1,2"
                    },
                    {
                        "name": "min_total_due",
                        "in": "query",
                        "description": "min_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "max_total_due",
                        "in": "query",
                        "description": "max_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "min_total_over_due",
                        "in": "query",
                        "description": "min_total_over_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "max_total_over_due",
                        "in": "query",
                        "description": "max_total_over_due",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/landlords/get/all": {
            "get": {
                "tags": [
                    "property_management.landlord_management"
                ],
                "summary": "This method is to get all landlords ",
                "description": "This method is to get all landlords",
                "operationId": "getAllLandlords",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "min_total_due",
                        "in": "query",
                        "description": "min_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "max_total_due",
                        "in": "query",
                        "description": "max_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "min_total_over_due",
                        "in": "query",
                        "description": "min_total_over_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "max_total_over_due",
                        "in": "query",
                        "description": "max_total_over_due",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/landlords/get/all/optimized": {
            "get": {
                "tags": [
                    "property_management.landlord_management"
                ],
                "summary": "This method is to get all landlords ",
                "description": "This method is to get all landlords",
                "operationId": "getAllLandlordsOptimized",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "min_total_due",
                        "in": "query",
                        "description": "min_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "max_total_due",
                        "in": "query",
                        "description": "max_total_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "min_total_over_due",
                        "in": "query",
                        "description": "min_total_over_due",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "max_total_over_due",
                        "in": "query",
                        "description": "max_total_over_due",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/landlords/get/single/{id}": {
            "get": {
                "tags": [
                    "property_management.landlord_management"
                ],
                "summary": "This method is to get landlord by id",
                "description": "This method is to get landlord by id",
                "operationId": "getLandlordById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/landlords/{id}": {
            "delete": {
                "tags": [
                    "property_management.landlord_management"
                ],
                "summary": "This method is to delete landlord by id",
                "description": "This method is to delete landlord by id",
                "operationId": "deleteLandlordById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/maintenance-item-types": {
            "get": {
                "tags": [
                    "maintenance_item_types"
                ],
                "summary": "This method is to get maintenance item types ",
                "description": "This method is to get maintenance item types ",
                "operationId": "getMaintenanceItemTypes",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name",
                        "required": false,
                        "example": ""
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "per_page",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "is_active",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id",
                        "required": true,
                        "example": "ASC"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "maintenance_item_types"
                ],
                "summary": "This method is to update maintenance item types ",
                "description": "This method is to update maintenance item types ",
                "operationId": "updateMaintenanceItemType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "maintenance_item_types"
                ],
                "summary": "This method is to store maintenance item types",
                "description": "This method is to store maintenance item types",
                "operationId": "createMaintenanceItemType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/maintenance-item-types/toggle-active": {
            "put": {
                "tags": [
                    "maintenance_item_types"
                ],
                "summary": "This method is to toggle maintenance item types",
                "description": "This method is to toggle maintenance item types",
                "operationId": "toggleActiveMaintenanceItemType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/maintenance-item-types/{ids}": {
            "delete": {
                "tags": [
                    "maintenance_item_types"
                ],
                "summary": "This method is to delete maintenance item type by id",
                "description": "This method is to delete maintenance item type by id",
                "operationId": "deleteMaintenanceItemTypesByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "path",
                        "description": "ids",
                        "required": true,
                        "example": "1,2,3"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/notifications/{perPage}": {
            "get": {
                "tags": [
                    "notification_management"
                ],
                "summary": "This method is to get notification",
                "description": "This method is to get notification",
                "operationId": "getNotifications",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/notifications/{garage_id}/{perPage}": {
            "get": {
                "tags": [
                    "notification_management"
                ],
                "summary": "This method is to get notification by garage id",
                "description": "This method is to get notification by garage id",
                "operationId": "getNotificationsByGarageId",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/notifications/change-status": {
            "put": {
                "tags": [
                    "notification_management"
                ],
                "summary": "This method is to update notification status",
                "description": "This method is to update notification status",
                "operationId": "updateNotificationStatus",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "notification_ids"
                                ],
                                "properties": {
                                    "notification_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4,
                                            5,
                                            6
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/notifications/{id}": {
            "delete": {
                "tags": [
                    "notification_management"
                ],
                "summary": "This method is to delete notification by id",
                "description": "This method is to delete notification by id",
                "operationId": "deleteNotificationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/notification-templates": {
            "put": {
                "tags": [
                    "template_management.notification"
                ],
                "summary": "This method is to update notification template",
                "description": "This method is to update notification template",
                "operationId": "updateNotificationTemplate",
                "requestBody": {
                    "description": "use [customer_name],[garage_owner_name],[garage_name],\n     *  in the template and use [customer_id], [pre_booking_id],[booking_id],[job_id],[garage_id],[bid_id] in link",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "template",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "emal v1"
                                    },
                                    "is_active": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "template": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "html template goes here"
                                    },
                                    "link": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "html template goes here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/notification-templates/{perPage}": {
            "get": {
                "tags": [
                    "template_management.notification"
                ],
                "summary": "This method is to get notification templates ",
                "description": "This method is to get notification templates",
                "operationId": "getNotificationTemplates",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/notification-templates/single/{id}": {
            "get": {
                "tags": [
                    "template_management.notification"
                ],
                "summary": "This method is to get notification template by id",
                "description": "This method is to get notification template by id",
                "operationId": "getNotificationTemplateById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/notification-template-types": {
            "get": {
                "tags": [
                    "template_management.notification"
                ],
                "summary": "This method is to get notification template types ",
                "description": "This method is to get notification template types",
                "operationId": "getNotificationTemplateTypes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/payment-types": {
            "put": {
                "tags": [
                    "property_management.payment_type_management"
                ],
                "summary": "This method is to update payment type",
                "description": "This method is to update payment type",
                "operationId": "updatePaymentType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "is_active"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.payment_type_management"
                ],
                "summary": "This method is to store payment type",
                "description": "This method is to store payment type",
                "operationId": "createPaymentType",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/payment-types/{perPage}": {
            "get": {
                "tags": [
                    "property_management.payment_type_management"
                ],
                "summary": "This method is to get payment types ",
                "description": "This method is to get payment types",
                "operationId": "getPaymentTypes",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/payment-types/get/all": {
            "get": {
                "tags": [
                    "property_management.payment_type_management"
                ],
                "summary": "This method is to get all payment types ",
                "description": "This method is to get all payment types",
                "operationId": "getAllPaymentTypes",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/payment-types/{id}": {
            "delete": {
                "tags": [
                    "property_management.payment_type_management"
                ],
                "summary": "This method is to delete fuel station by id",
                "description": "This method is to delete fuel station by id",
                "operationId": "deletePaymentTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/product-categories": {
            "put": {
                "tags": [
                    "shop_section.product_category_management"
                ],
                "summary": "This method is to update Product Category",
                "description": "This method is to update Product Category",
                "operationId": "updateProductCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "icon",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "fa fa-- tui halua kha"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "shop_section.product_category_management"
                ],
                "summary": "This method is to store product category",
                "description": "This method is to store product category",
                "operationId": "createProductCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "icon",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "fa fa tui halua kha"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/product-categories/{perPage}": {
            "get": {
                "tags": [
                    "shop_section.product_category_management"
                ],
                "summary": "This method is to get  Product Categories ",
                "description": "This method is to get Product Categories",
                "operationId": "getProductCategories",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/product-categories/single/get/{id}": {
            "get": {
                "tags": [
                    "shop_section.product_category_management"
                ],
                "summary": "This method is to get Product Category by id",
                "description": "This method is to get Product Category by id",
                "operationId": "getProductCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/product-categories/get/all": {
            "get": {
                "tags": [
                    "basics"
                ],
                "summary": "This method is to get all product categories ",
                "description": "This method is to get all product categories",
                "operationId": "getAllProductCategory",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/product-categories/{id}": {
            "delete": {
                "tags": [
                    "shop_section.product_category_management"
                ],
                "summary": "This method is to delete product category by id",
                "description": "This method is to delete product category by id",
                "operationId": "deleteProductCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/products": {
            "put": {
                "tags": [
                    "shop_section.product_management"
                ],
                "summary": "This method is to update Product ",
                "description": "This method is to update Product",
                "operationId": "updateProduct",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "shop_id",
                                    "sku",
                                    "image",
                                    "images",
                                    "sku",
                                    "price",
                                    "quantity",
                                    "product_variations",
                                    "product_category_id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "single"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "gear"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car description"
                                    },
                                    "shop_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "product_category_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "sku": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car 123"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "/abcd/efgh"
                                    },
                                    "images": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "/f.png",
                                            "/g.jpeg"
                                        ]
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "20"
                                    },
                                    "product_variations": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "id": 1,
                                                "automobile_make_id": 1,
                                                "price": 10,
                                                "quantity": 30
                                            },
                                            {
                                                "id": 2,
                                                "automobile_make_id": 2,
                                                "price": 20,
                                                "quantity": 30
                                            },
                                            {
                                                "automobile_make_id": 3,
                                                "price": 30,
                                                "quantity": 30
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "shop_section.product_management"
                ],
                "summary": "This method is to store product",
                "description": "This method is to store product",
                "operationId": "createProduct",
                "requestBody": {
                    "description": " product type be single or variable",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "name",
                                    "description",
                                    "shop_id",
                                    "sku",
                                    "image",
                                    "images",
                                    "sku",
                                    "price",
                                    "quantity",
                                    "product_variations",
                                    "product_category_id"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "single"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "gear"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car description"
                                    },
                                    "shop_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "product_category_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "sku": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car 123"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "/abcd/efgh"
                                    },
                                    "images": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "/f.png",
                                            "/g.jpeg"
                                        ]
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "20"
                                    },
                                    "product_variations": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "automobile_make_id": 1,
                                                "price": 10,
                                                "quantity": 30
                                            },
                                            {
                                                "automobile_make_id": 2,
                                                "price": 20,
                                                "quantity": 30
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/products/link-product-to-shop": {
            "patch": {
                "tags": [
                    "shop_section.product_management"
                ],
                "summary": "This method is to link Product To Shop ",
                "description": "This method is to link Product To Shop",
                "operationId": "linkProductToShop",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "shop_id",
                                    "sku",
                                    "image",
                                    "images",
                                    "sku",
                                    "price",
                                    "quantity",
                                    "product_variations",
                                    "product_category_id"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "single"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "gear"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car description"
                                    },
                                    "shop_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "product_category_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "/abcd/efgh"
                                    },
                                    "images": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "/f.png",
                                            "/g.jpeg"
                                        ]
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10"
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "20"
                                    },
                                    "product_variations": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "automobile_make_id": 1,
                                                "price": 10,
                                                "quantity": 30
                                            },
                                            {
                                                "automobile_make_id": 2,
                                                "price": 20,
                                                "quantity": 30
                                            },
                                            {
                                                "automobile_make_id": 3,
                                                "price": 30,
                                                "quantity": 30
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/products/{perPage}": {
            "get": {
                "tags": [
                    "shop_section.product_management"
                ],
                "summary": "This method is to get  Product  ",
                "description": "This method is to get Product ",
                "operationId": "getProducts",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "product_category_id",
                        "in": "query",
                        "description": "product_category_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/products/single/get/{id}": {
            "get": {
                "tags": [
                    "shop_section.product_management"
                ],
                "summary": "This method is to get Product by id",
                "description": "This method is to get Product by id",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/products/{id}": {
            "delete": {
                "tags": [
                    "shop_section.product_management"
                ],
                "summary": "This method is to delete product by id",
                "description": "This method is to delete product by id",
                "operationId": "deleteProductById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/property-agreement": {
            "put": {
                "tags": [
                    "property_management.property_agreement"
                ],
                "summary": "Update property agreement",
                "description": "This method updates an existing property agreement based on the provided data.",
                "operationId": "updatePropertyAgreement",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "landlord_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "property_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-11-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-11-01"
                                    },
                                    "landlord_sign_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-11-01"
                                    },
                                    "agency_sign_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-11-01"
                                    },
                                    "rent_due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-11-01"
                                    },
                                    "payment_arrangement": {
                                        "type": "string",
                                        "enum": [
                                            "By_Cash",
                                            "By_Cheque",
                                            "Bank_Transfer"
                                        ],
                                        "example": "By_Cash"
                                    },
                                    "cheque_payable_to": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "agent_commission": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 200
                                    },
                                    "management_fee": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50,
                                        "nullable": true
                                    },
                                    "inventory_charges": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100,
                                        "nullable": true
                                    },
                                    "terms_conditions": {
                                        "type": "string",
                                        "example": "Updated terms and conditions..."
                                    },
                                    "legal_representative": {
                                        "type": "string",
                                        "example": "legal_representative"
                                    },
                                    "min_price": {
                                        "type": "string",
                                        "example": "10.5"
                                    },
                                    "max_price": {
                                        "type": "string",
                                        "example": "11.5"
                                    },
                                    "agency_type": {
                                        "type": "string",
                                        "example": "agency_type"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "let_property"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "property_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-11-01"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-11-01"
                                        },
                                        "landlord_sign_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-11-01"
                                        },
                                        "agency_sign_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-11-01"
                                        },
                                        "rent_due_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-11-01"
                                        },
                                        "payment_arrangement": {
                                            "type": "string",
                                            "example": "By_Cash"
                                        },
                                        "cheque_payable_to": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "agent_commission": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 200
                                        },
                                        "management_fee": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 50
                                        },
                                        "inventory_charges": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 100
                                        },
                                        "terms_conditions": {
                                            "type": "string",
                                            "example": "Updated terms and conditions..."
                                        },
                                        "legal_representative": {
                                            "type": "string",
                                            "example": "legal_representative"
                                        },
                                        "min_price": {
                                            "type": "string",
                                            "example": "10.5"
                                        },
                                        "max_price": {
                                            "type": "string",
                                            "example": "11.5"
                                        },
                                        "agency_type": {
                                            "type": "string",
                                            "example": "agency_type"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "let_property"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-11-01T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.property_agreement"
                ],
                "summary": "Store property agreement",
                "description": "This method is to store a new property agreement, replacing any existing agreement for the same property and landlord.",
                "operationId": "createPropertyAgreement",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "landlord_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "property_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-11-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-11-01"
                                    },
                                    "payment_arrangement": {
                                        "type": "string",
                                        "enum": [
                                            "By_Cash",
                                            "By_Cheque",
                                            "Bank_Transfer"
                                        ],
                                        "example": "By_Cash"
                                    },
                                    "cheque_payable_to": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "agent_commission": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 200
                                    },
                                    "management_fee": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50,
                                        "nullable": true
                                    },
                                    "inventory_charges": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100,
                                        "nullable": true
                                    },
                                    "terms_conditions": {
                                        "type": "string",
                                        "example": "The terms and conditions of the agreement are as follows..."
                                    },
                                    "legal_representative": {
                                        "type": "string",
                                        "example": "legal_representative"
                                    },
                                    "min_price": {
                                        "type": "string",
                                        "example": "10.5"
                                    },
                                    "max_price": {
                                        "type": "string",
                                        "example": "11.5"
                                    },
                                    "agency_type": {
                                        "type": "string",
                                        "example": "agency_type"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "let_property"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "property_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "start_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-11-01"
                                        },
                                        "end_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-11-01"
                                        },
                                        "landlord_sign_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2024-11-01"
                                        },
                                        "agency_sign_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-11-01"
                                        },
                                        "rent_due_date": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "2025-11-01"
                                        },
                                        "payment_arrangement": {
                                            "type": "string",
                                            "enum": [
                                                "By_Cash",
                                                "By_Cheque",
                                                "Bank_Transfer"
                                            ],
                                            "example": "By_Cash"
                                        },
                                        "cheque_payable_to": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "agent_commission": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 200
                                        },
                                        "management_fee": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 50,
                                            "nullable": true
                                        },
                                        "inventory_charges": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 100,
                                            "nullable": true
                                        },
                                        "terms_conditions": {
                                            "type": "string",
                                            "example": "The terms and conditions of the agreement are as follows..."
                                        },
                                        "legal_representative": {
                                            "type": "string",
                                            "example": "legal_representative"
                                        },
                                        "min_price": {
                                            "type": "string",
                                            "example": "10.5"
                                        },
                                        "max_price": {
                                            "type": "string",
                                            "example": "11.5"
                                        },
                                        "agency_type": {
                                            "type": "string",
                                            "example": "agency_type"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "let_property"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-11-01T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-11-01T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/property-agreements": {
            "get": {
                "tags": [
                    "property_management.property_agreement"
                ],
                "summary": "Get property agreements",
                "description": "This method retrieves the history of property agreements for a given property and landlord, including soft-deleted agreements.",
                "operationId": "getPropertyAgreements",
                "parameters": [
                    {
                        "name": "landlord_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/property-agreements/{agreement_id}": {
            "delete": {
                "tags": [
                    "property_management.property_agreement"
                ],
                "summary": "Delete a document from a property",
                "description": "This method deletes a document associated with a specific property",
                "operationId": "deletePropertyAgreement",
                "parameters": [
                    {
                        "name": "agreement_id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Property or Document Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/property-report": {
            "get": {
                "tags": [
                    "property_management.basics"
                ],
                "summary": "This method is to get property report ",
                "description": "This method is to get property report",
                "operationId": "propertyReport",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "description": "property_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "repair_category",
                        "in": "query",
                        "description": "repair_category",
                        "required": true,
                        "example": "repair_category"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/activities/{perPage}": {
            "get": {
                "tags": [
                    "property_management.basics"
                ],
                "summary": "This method is to get activities ",
                "description": "This method is to get activities",
                "operationId": "showActivity",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "property_ids[]",
                        "in": "query",
                        "description": "property_ids",
                        "required": true,
                        "example": "1,2"
                    },
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "description": "tenant_id",
                        "required": true,
                        "example": "tenant_id"
                    },
                    {
                        "name": "landlord_id",
                        "in": "query",
                        "description": "landlord_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "description": "client_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/dashboard": {
            "get": {
                "tags": [
                    "property_management.basics"
                ],
                "summary": "get all dashboard data combined",
                "description": "get all dashboard data combined",
                "operationId": "getDashboardData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/inspection-reports": {
            "get": {
                "tags": [
                    "property_management.basics"
                ],
                "summary": "get all dashboard data combined",
                "description": "get all dashboard data combined",
                "operationId": "getInspectionReportData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/property-image": {
            "post": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "This method is to store property logo",
                "description": "This method is to store property logo",
                "operationId": "createPropertyImage",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "image to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/property-image/multiple": {
            "post": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "This method is to store multiple image request",
                "description": "This method is to store multiple image request",
                "operationId": "createPropertyImageMultiple",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "images[]"
                                ],
                                "properties": {
                                    "images[]": {
                                        "description": "array of images to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "file"
                                        },
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/properties": {
            "put": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "This method is to update property",
                "description": "This method is to update property",
                "operationId": "updateProperty",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "image.jpg"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "address"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "country"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Dhaka"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1207"
                                    },
                                    "town": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "town"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1207"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1207"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "type"
                                    },
                                    "reference_no": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "reference_no"
                                    },
                                    "tenant_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "landlord_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "This method is to store property",
                "description": "This method is to store property",
                "operationId": "createProperty",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "image.jpg"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "address"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "country"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Dhaka"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1207"
                                    },
                                    "town": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "town"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1207"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1207"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "type"
                                    },
                                    "reference_no": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "reference_no"
                                    },
                                    "tenant_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "landlord_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2.0/properties": {
            "post": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "This method is to store property",
                "description": "This method is to store property",
                "operationId": "createPropertyV2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "image",
                                    "address",
                                    "country",
                                    "city",
                                    "postcode",
                                    "type",
                                    "reference_no"
                                ],
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "image.jpg"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "address"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Bangladesh"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Dhaka"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1207"
                                    },
                                    "town": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "town"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "23.8103"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "90.4125"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "residential"
                                    },
                                    "reference_no": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "REF12345"
                                    },
                                    "date_of_instruction": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-11-01"
                                    },
                                    "howDetached": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "fully detached"
                                    },
                                    "no_of_beds": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "one"
                                    },
                                    "no_of_baths": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "one"
                                    },
                                    "is_garden": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "propertyFloor": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Ground Floor"
                                    },
                                    "category": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Ground Floor"
                                    },
                                    "price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "500000"
                                    },
                                    "purpose": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "for sale"
                                    },
                                    "property_door_no": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10A"
                                    },
                                    "property_road": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Main Street"
                                    },
                                    "is_dss": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "county": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Dhaka"
                                    },
                                    "tenant_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "landlord_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/properties/documents": {
            "put": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "Update an existing document for a property",
                "description": "This method is to update an existing document for a property",
                "operationId": "updateDocumentInProperty",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "documents"
                                ],
                                "properties": {
                                    "documents": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "gas_start_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-11-01"
                                                },
                                                "gas_end_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-11-01"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "description"
                                                },
                                                "document_type_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "files": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "file.pdf"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Property or Document Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "Add document to existing property",
                "description": "This method is to add a document to an existing property",
                "operationId": "addDocumentToProperty",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "documents"
                                ],
                                "properties": {
                                    "documents": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "gas_start_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2024-11-01"
                                                },
                                                "gas_end_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-11-01"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "description"
                                                },
                                                "document_type_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "files": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "file.pdf"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Property Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/properties/{property_id}/documents/{document_id}": {
            "delete": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "Delete a document from a property",
                "description": "This method deletes a document associated with a specific property",
                "operationId": "deleteDocumentFromProperty",
                "parameters": [
                    {
                        "name": "property_id",
                        "in": "path",
                        "description": "Property ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "document_id",
                        "in": "path",
                        "description": "Document ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Property or Document Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v2.0/properties-update": {
            "put": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "This method is to update property",
                "description": "This method is to update property",
                "operationId": "updatePropertyV2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "image.jpg"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "address"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "country"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Dhaka"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1207"
                                    },
                                    "town": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "town"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1207"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1207"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "type"
                                    },
                                    "reference_no": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "reference_no"
                                    },
                                    "tenant_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "landlord_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/properties-update-landlord": {
            "put": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "This method is to update property",
                "description": "This method is to update property",
                "operationId": "updatePropertyLandlord",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "landlord_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/properties/{perPage}": {
            "get": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "This method is to get properties ",
                "description": "This method is to get properties",
                "operationId": "getProperties",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "example": "15"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search term to filter properties by reference number, address, or type",
                        "required": false,
                        "example": "keyword"
                    },
                    {
                        "name": "landlord_ids",
                        "in": "query",
                        "description": "Filter properties by landlord ID",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "tenant_ids",
                        "in": "query",
                        "description": "Filter properties by tenant ID",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter properties by category",
                        "required": false,
                        "example": "residential"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Search properties by address",
                        "required": false,
                        "example": "123 Main St"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter properties by the creation start date",
                        "required": false,
                        "example": "2023-01-01"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter properties by the creation end date",
                        "required": false,
                        "example": "2023-12-31"
                    },
                    {
                        "name": "reference_no",
                        "in": "query",
                        "description": "Filter properties by reference number",
                        "required": false,
                        "example": "ABC123"
                    },
                    {
                        "name": "start_date_of_instruction",
                        "in": "query",
                        "description": "Filter properties by the instruction start date",
                        "required": false,
                        "example": "2023-01-01"
                    },
                    {
                        "name": "end_date_of_instruction",
                        "in": "query",
                        "description": "Filter properties by the instruction end date",
                        "required": false,
                        "example": "2023-12-31"
                    },
                    {
                        "name": "start_no_of_beds",
                        "in": "query",
                        "description": "Filter properties by the minimum number of beds",
                        "required": false,
                        "example": "2"
                    },
                    {
                        "name": "end_no_of_beds",
                        "in": "query",
                        "description": "Filter properties by the maximum number of beds",
                        "required": false,
                        "example": "4"
                    },
                    {
                        "name": "is_garden",
                        "in": "query",
                        "description": "Filter properties that have a garden",
                        "required": false,
                        "example": "true"
                    },
                    {
                        "name": "is_dss",
                        "in": "query",
                        "description": "Filter properties that are DSS (Department of Social Services) approved",
                        "required": false,
                        "example": "true"
                    },
                    {
                        "name": "document_type_id",
                        "in": "query",
                        "description": "Filter properties by document type ID",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "is_document_expired",
                        "in": "query",
                        "description": "Filter properties by document type ID",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "document_expired_in",
                        "in": "query",
                        "description": "Filter properties by document type ID",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "start_inspection_date",
                        "in": "query",
                        "description": "Filter inspections by start date",
                        "required": false,
                        "example": "2023-01-01"
                    },
                    {
                        "name": "end_inspection_date",
                        "in": "query",
                        "description": "Filter inspections by end date",
                        "required": false,
                        "example": "2023-12-31"
                    },
                    {
                        "name": "start_next_inspection_date",
                        "in": "query",
                        "description": "Filter next inspections by start date",
                        "required": false,
                        "example": "2023-01-01"
                    },
                    {
                        "name": "end_next_inspection_date",
                        "in": "query",
                        "description": "Filter next inspections by end date",
                        "required": false,
                        "example": "2023-12-31"
                    },
                    {
                        "name": "inspection_duration",
                        "in": "query",
                        "description": "Filter inspections by the inspector's name or ID",
                        "required": false,
                        "example": "inspection duration"
                    },
                    {
                        "name": "inspected_by",
                        "in": "query",
                        "description": "Filter inspections by the inspector's name or ID",
                        "required": false,
                        "example": "John Doe"
                    },
                    {
                        "name": "maintenance_item_type_id",
                        "in": "query",
                        "description": "Filter inspections by maintenance item type ID",
                        "required": false,
                        "example": "1"
                    },
                    {
                        "name": "start_next_follow_up_date",
                        "in": "query",
                        "description": "Filter follow-ups by start date",
                        "required": false,
                        "example": "2023-01-01"
                    },
                    {
                        "name": "end_next_follow_up_date",
                        "in": "query",
                        "description": "Filter follow-ups by end date",
                        "required": false,
                        "example": "2023-12-31"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order the results by a specific column (e.g., 'address')",
                        "required": false,
                        "example": "address"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/properties/{id}/add-more-images": {
            "post": {
                "tags": [
                    "property_management"
                ],
                "summary": "Add more images to a property",
                "operationId": "636da121337459803eee51a33e217baf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "images": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "url"
                                        },
                                        "example": [
                                            "https://example.com/image3.jpg",
                                            "https://example.com/image4.jpg"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Images added successfully"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/v1.0/properties/{id}/delete-images": {
            "delete": {
                "tags": [
                    "property_management"
                ],
                "summary": "Delete specific images from a property",
                "operationId": "80688648d5d1aa7e562053f3640b2014",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "images": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "url"
                                        },
                                        "example": [
                                            "https://example.com/image1.jpg"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Images deleted successfully"
                    },
                    "404": {
                        "description": "Property not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/v1.0/properties/get/all": {
            "get": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "This method is to get properties ",
                "description": "This method is to get properties",
                "operationId": "getAllProperties",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "address",
                        "required": true,
                        "example": "address"
                    },
                    {
                        "name": "reference_no",
                        "in": "query",
                        "description": "reference_no",
                        "required": true,
                        "example": "reference_no"
                    },
                    {
                        "name": "landlord_ids",
                        "in": "query",
                        "description": "landlord_ids",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "tenant_ids",
                        "in": "query",
                        "description": "tenant_ids",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/properties/get/all/optimized": {
            "get": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "This method is to get properties ",
                "description": "This method is to get properties",
                "operationId": "getAllPropertiesOptimized",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "address",
                        "required": true,
                        "example": "address"
                    },
                    {
                        "name": "landlord_ids",
                        "in": "query",
                        "description": "landlord_ids",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "tenant_ids",
                        "in": "query",
                        "description": "tenant_ids",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/properties/get/single/{id}": {
            "get": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "This method is to get property by id",
                "description": "This method is to get property by id",
                "operationId": "getPropertyById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/properties/{id}": {
            "delete": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "This method is to delete property by id",
                "description": "This method is to delete property by id",
                "operationId": "deletePropertyById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/properties/generate/property-reference_no": {
            "get": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "This method is to generate reference number",
                "description": "This method is to generate reference number",
                "operationId": "generatePropertyReferenceNumber",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/properties/validate/property-reference_no/{reference_no}": {
            "get": {
                "tags": [
                    "property_management.property_management"
                ],
                "summary": "This method is to validate reference number",
                "description": "This method is to validate reference number",
                "operationId": "validatePropertyReferenceNumber",
                "parameters": [
                    {
                        "name": "reference_no",
                        "in": "path",
                        "description": "reference_no",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/receipts": {
            "put": {
                "tags": [
                    "property_management.receipt_management"
                ],
                "summary": "This method is to update receipt",
                "description": "This method is to update receipt",
                "operationId": "updateReceipt",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "tenant_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "tenant_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "tenant_name"
                                    },
                                    "property_address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "property_address"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "100"
                                    },
                                    "receipt_by": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "receipt_by"
                                    },
                                    "receipt_date": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "2019-06-29"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "format": "tring",
                                        "example": "notes"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "format": "tring",
                                        "example": "payment_method"
                                    },
                                    "sale_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "sale_id": "1",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            },
                                            {
                                                "sale_id": "2",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.receipt_management"
                ],
                "summary": "This method is to store receipt",
                "description": "This method is to store receipt",
                "operationId": "createReceipt",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "tenant_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "tenant_name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "tenant_name"
                                    },
                                    "property_address": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "property_address"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "100"
                                    },
                                    "receipt_by": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "receipt_by"
                                    },
                                    "receipt_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "notes"
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "payment_method"
                                    },
                                    "sale_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "sale_id": "1",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            },
                                            {
                                                "sale_id": "2",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/receipts/{perPage}": {
            "get": {
                "tags": [
                    "property_management.receipt_management"
                ],
                "summary": "This method is to get receipts ",
                "description": "This method is to get receipts",
                "operationId": "getReceipts",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "min_amount",
                        "in": "query",
                        "description": "min_amount",
                        "required": true,
                        "example": "10"
                    },
                    {
                        "name": "max_amount",
                        "in": "query",
                        "description": "max_amount",
                        "required": true,
                        "example": "10"
                    },
                    {
                        "name": "property_ids[]",
                        "in": "query",
                        "description": "property_ids",
                        "required": true,
                        "example": "1,2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/receipts/get/single/{id}": {
            "get": {
                "tags": [
                    "property_management.receipt_management"
                ],
                "summary": "This method is to get receipt by id",
                "description": "This method is to get receipt by id",
                "operationId": "getReceiptsyId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/receipts/{id}": {
            "delete": {
                "tags": [
                    "property_management.receipt_management"
                ],
                "summary": "This method is to delete receipt by id",
                "description": "This method is to delete receipt by id",
                "operationId": "deleteReceiptById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/repair-category-icon": {
            "post": {
                "tags": [
                    "property_management.repair_category_management"
                ],
                "summary": "This method is to store repair category logo",
                "description": "This method is to store repair category logo",
                "operationId": "createRepairCategoryImage",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "image to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/repair-categories": {
            "put": {
                "tags": [
                    "property_management.repair_category_management"
                ],
                "summary": "This method is to update repair category",
                "description": "This method is to update repair category",
                "operationId": "updateRepairCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "dfthth"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Al.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.repair_category_management"
                ],
                "summary": "This method is to store repair category",
                "description": "This method is to store repair category",
                "operationId": "createRepairCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "icon": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "image.jpg"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/repair-categories/{perPage}": {
            "get": {
                "tags": [
                    "property_management.repair_category_management"
                ],
                "summary": "This method is to get repair categories ",
                "description": "This method is to get repair categories",
                "operationId": "getRepairCategories",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/repair-categories/get/all/optimized": {
            "get": {
                "tags": [
                    "property_management.repair_category_management"
                ],
                "summary": "This method is to get repair categories ",
                "description": "This method is to get repair categories",
                "operationId": "getAllRepairCategoriesOptimized",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/repair-categories/get/single/{id}": {
            "get": {
                "tags": [
                    "property_management.repair_category_management"
                ],
                "summary": "This method is to get repair category by id",
                "description": "This method is to get repair category by id",
                "operationId": "getRepairCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/repair-categories/{id}": {
            "delete": {
                "tags": [
                    "property_management.repair_category_management"
                ],
                "summary": "This method is to delete repair category by id",
                "description": "This method is to delete repair category by id",
                "operationId": "deleteRepairCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/repair-receipts-file": {
            "post": {
                "tags": [
                    "property_management.repair_management"
                ],
                "summary": "This method is to store reciept image",
                "description": "This method is to store reciept image",
                "operationId": "createRepairReceiptFile",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "file to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/repair-receipts-file/multiple": {
            "post": {
                "tags": [
                    "property_management.repair_management"
                ],
                "summary": "This method is to store multiple repair file",
                "description": "This method is to store multiple repair file",
                "operationId": "createRepairReceiptFileMultiple",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "files[]"
                                ],
                                "properties": {
                                    "files[]": {
                                        "description": "array of files to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "file"
                                        },
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/repair-images/multiple": {
            "post": {
                "tags": [
                    "property_management.repair_management"
                ],
                "summary": "This method is to store multiple repair request",
                "description": "This method is to store multiple repair request",
                "operationId": "createRepairImageMultiple",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "images[]"
                                ],
                                "properties": {
                                    "images[]": {
                                        "description": "array of images to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "file"
                                        },
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/repairs": {
            "put": {
                "tags": [
                    "property_management.repair_management"
                ],
                "summary": "This method is to update repair",
                "description": "This method is to update repair",
                "operationId": "updateRepair",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "property_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "repair_category_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "item_description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "item_description"
                                    },
                                    "status": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "status"
                                    },
                                    "price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "create_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "images": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "a.jpg",
                                            "b.jpg",
                                            "c.jpg"
                                        ]
                                    },
                                    "receipt": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "a.jpg",
                                            "b.jpg",
                                            "c.jpg"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.repair_management"
                ],
                "summary": "This method is to store repair",
                "description": "This method is to store repair",
                "operationId": "createRepair",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "property_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "repair_category_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1"
                                    },
                                    "item_description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "item_description"
                                    },
                                    "status": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "status"
                                    },
                                    "price": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10"
                                    },
                                    "create_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "images": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "a.jpg",
                                            "b.jpg",
                                            "c.jpg"
                                        ]
                                    },
                                    "receipt": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "a.jpg",
                                            "b.jpg",
                                            "c.jpg"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/repairs/{perPage}": {
            "get": {
                "tags": [
                    "property_management.repair_management"
                ],
                "summary": "This method is to get repairs ",
                "description": "This method is to get repairs",
                "operationId": "getRepairs",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "repair_id",
                        "in": "query",
                        "description": "repair_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "description": "property_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "repair_category",
                        "in": "query",
                        "description": "repair_category",
                        "required": true,
                        "example": "repair_category"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/repairs/get/single/{id}": {
            "get": {
                "tags": [
                    "property_management.repair_management"
                ],
                "summary": "This method is to get repair by id",
                "description": "This method is to get repair by id",
                "operationId": "getRepairById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/repairs/{id}": {
            "delete": {
                "tags": [
                    "property_management.repair_management"
                ],
                "summary": "This method is to delete repair by id",
                "description": "This method is to delete repair by id",
                "operationId": "deleteRepairById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/review-new/create/questions": {
            "post": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to store question",
                "description": "This method is to store question",
                "operationId": "storeQuestion",
                "requestBody": {
                    "description": "supported value is of type is 'star','emoji','numbers','heart'",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question",
                                    "is_active"
                                ],
                                "properties": {
                                    "question": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "star"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/update/questions": {
            "put": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to update question",
                "description": "This method is to update question",
                "operationId": "updateQuestion",
                "requestBody": {
                    "description": "supported value is of type is 'star','emoji','numbers','heart'",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question",
                                    "is_active",
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "question": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "was it good?"
                                    },
                                    "type": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "star"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/update/active_state/questions": {
            "put": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to update question's active state",
                "description": "This method is to update question's active state",
                "operationId": "updateQuestionActiveState",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "is_active",
                                    "id"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get question",
                "description": "This method is to get question",
                "operationId": "getQuestion",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "query",
                        "description": "garage Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions-all": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get all question without pagination",
                "description": "This method is to get all question without pagination",
                "operationId": "getQuestionAll",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "query",
                        "description": "garage Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions-all-report": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get all question report",
                "description": "This method is to get all question report",
                "operationId": "getQuestionAllReport",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "query",
                        "description": "garage Id",
                        "required": false
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": false,
                        "example": "2023-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": false,
                        "example": "2023-06-29"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions/{id}": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get question by id",
                "description": "This method is to get question by id",
                "operationId": "getQuestionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "question Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/delete/questions/{id}": {
            "delete": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to delete question by id",
                "description": "This method is to delete question by id",
                "operationId": "deleteQuestionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "question Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/questions-all-report/quantum": {
            "get": {
                "tags": [
                    "review.setting.question"
                ],
                "summary": "This method is to get all question report.  and only garage owner of the garage can view this ",
                "description": "This method is to get all question report. and only garage owner of the garage can view this ",
                "operationId": "getQuestionAllReportQuantum",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "query",
                        "description": "garage Id",
                        "required": false
                    },
                    {
                        "name": "quantum",
                        "in": "query",
                        "description": "quantum",
                        "required": false
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "period",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/create/tags": {
            "post": {
                "tags": [
                    "review.setting.tag"
                ],
                "summary": "This method is to store tag",
                "description": "This method is to store tag",
                "operationId": "storeTag",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tag",
                                    "garage_id"
                                ],
                                "properties": {
                                    "tag": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/create/tags/multiple/{garage_id}": {
            "post": {
                "tags": [
                    "review.setting.tag"
                ],
                "summary": "This method is to store tag",
                "description": "This method is to store tag",
                "operationId": "storeTagMultiple",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tags"
                                ],
                                "properties": {
                                    "tags": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "tag1",
                                            "tag2"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/update/tags": {
            "put": {
                "tags": [
                    "review.setting.tag"
                ],
                "summary": "This method is to update tag",
                "description": "This method is to update tag",
                "operationId": "updateTag",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tag",
                                    "id"
                                ],
                                "properties": {
                                    "tag": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/tags": {
            "get": {
                "tags": [
                    "review.setting.tag"
                ],
                "summary": "This method is to get tag",
                "description": "This method is to get tag",
                "operationId": "getTag",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "query",
                        "description": "garage Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/get/tags/{id}": {
            "get": {
                "tags": [
                    "review.setting.tag"
                ],
                "summary": "This method is to get tag  by id",
                "description": "This method is to get tag  by id",
                "operationId": "getTagById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "tag Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/delete/tags/{id}": {
            "delete": {
                "tags": [
                    "review.setting.tag"
                ],
                "summary": "This method is to delete tag  by id",
                "description": "This method is to delete tag  by id",
                "operationId": "deleteTagById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "tag Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/owner/create/questions": {
            "post": {
                "tags": [
                    "review.setting.link"
                ],
                "summary": "This method is to store question",
                "description": "This method is to store question.",
                "operationId": "storeOwnerQuestion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question_id",
                                    "stars"
                                ],
                                "properties": {
                                    "question_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "stars": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "star_id": "2",
                                                "tags": [
                                                    {
                                                        "tag_id": "2"
                                                    },
                                                    {
                                                        "tag_id": "2"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/owner/update/questions": {
            "post": {
                "tags": [
                    "review.setting.link"
                ],
                "summary": "This method is to update question",
                "description": "This method is to update question",
                "operationId": "updateOwnerQuestion",
                "parameters": [
                    {
                        "name": "_method",
                        "in": "query",
                        "description": "method",
                        "required": false,
                        "example": "PATCH"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question_id",
                                    "stars"
                                ],
                                "properties": {
                                    "question_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "stars": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "star_id": "2",
                                                "tags": [
                                                    {
                                                        "tag_id": "2"
                                                    },
                                                    {
                                                        "tag_id": "2"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/getavg/review/{garageId}/{start}/{end}": {
            "get": {
                "tags": [
                    "review"
                ],
                "summary": "This method is to get average",
                "description": "This method is to get average",
                "operationId": "getAverage",
                "parameters": [
                    {
                        "name": "garageId",
                        "in": "path",
                        "description": "garageId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start",
                        "in": "path",
                        "description": "from date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end",
                        "in": "path",
                        "description": "to date",
                        "required": true,
                        "example": "2026-06-29"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/getreview/{garageId}/{rate}/{start}/{end}": {
            "get": {
                "tags": [
                    "review"
                ],
                "summary": "This method is to filter   Review",
                "description": "This method is to filter   Review",
                "operationId": "filterReview",
                "parameters": [
                    {
                        "name": "garageId",
                        "in": "path",
                        "description": "garageId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "rate",
                        "in": "path",
                        "description": "rate",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start",
                        "in": "path",
                        "description": "from date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end",
                        "in": "path",
                        "description": "to date",
                        "required": true,
                        "example": "2026-06-29"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/getreviewAll/{garageId}": {
            "get": {
                "tags": [
                    "review"
                ],
                "summary": "This method is to get review by garage id",
                "description": "This method is to get review by garage id",
                "operationId": "getReviewByGarageId",
                "parameters": [
                    {
                        "name": "garageId",
                        "in": "path",
                        "description": "garageId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/getcustomerreview/{garageId}/{start}/{end}": {
            "get": {
                "tags": [
                    "review"
                ],
                "summary": "This method is to get customer review",
                "description": "This method is to get customer review",
                "operationId": "getCustommerReview",
                "parameters": [
                    {
                        "name": "garageId",
                        "in": "path",
                        "description": "garageId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start",
                        "in": "path",
                        "description": "from date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end",
                        "in": "path",
                        "description": "to date",
                        "required": true,
                        "example": "2026-06-29"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/review-new/{jobId}": {
            "post": {
                "tags": [
                    "review"
                ],
                "summary": "This method is to store review",
                "description": "This method is to store review",
                "operationId": "storeReview",
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "description": "jobId",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description",
                                    "rate",
                                    "comment",
                                    "values"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "test"
                                    },
                                    "rate": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2.5"
                                    },
                                    "comment": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "not good"
                                    },
                                    "values": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "question_id": 1,
                                                "tag_id": 2,
                                                "star_id": 1
                                            },
                                            {
                                                "question_id": 2,
                                                "tag_id": 1,
                                                "star_id": 4
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/roles": {
            "put": {
                "tags": [
                    "user_management.role"
                ],
                "summary": "This method is to update role",
                "description": "This method is to update role",
                "operationId": "updateRole",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "permissions"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "permissions": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "user_create",
                                            "user_update"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "user_management.role"
                ],
                "summary": "This method is to store role",
                "description": "This method is to store role",
                "operationId": "createRole",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "permissions"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "permissions": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            "user_create",
                                            "user_update"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/roles/{perPage}": {
            "get": {
                "tags": [
                    "user_management.role"
                ],
                "summary": "This method is to get roles",
                "description": "This method is to get roles",
                "operationId": "getRoles",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/roles/get/all": {
            "get": {
                "tags": [
                    "user_management.role"
                ],
                "summary": "This method is to get all roles",
                "description": "This method is to get all roles",
                "operationId": "getRolesAll",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/roles/get-by-id/{id}": {
            "get": {
                "tags": [
                    "user_management.role"
                ],
                "summary": "This method is to get role by id",
                "description": "This method is to get role by id",
                "operationId": "getRoleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/roles/{id}": {
            "delete": {
                "tags": [
                    "user_management.role"
                ],
                "summary": "This method is to delete role by id",
                "description": "This method is to delete role by id",
                "operationId": "deleteRoleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/initial-role-permissions": {
            "get": {
                "tags": [
                    "user_management.role"
                ],
                "summary": "This method is to get initioal role permissions",
                "description": "This method is to get initioal role permissions",
                "operationId": "getInitialRolePermissions",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sale-items": {
            "put": {
                "tags": [
                    "property_management.sale_item_management"
                ],
                "summary": "This method is to update sale item ",
                "description": "This method is to update sale item ",
                "operationId": "updateSaleItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10.10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.sale_item_management"
                ],
                "summary": "This method is to store sale item ",
                "description": "This method is to store sale item ",
                "operationId": "createSaleItem",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "10.10"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sale-items/{perPage}": {
            "get": {
                "tags": [
                    "property_management.sale_item_management"
                ],
                "summary": "This method is to get sale items ",
                "description": "This method is to get sale items",
                "operationId": "getSaleItems",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sale-items/get/single/{id}": {
            "get": {
                "tags": [
                    "property_management.sale_item_management"
                ],
                "summary": "This method is to get sale item  by id",
                "description": "This method is to get sale item by id",
                "operationId": "getSaleItemById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sale-items/{id}": {
            "delete": {
                "tags": [
                    "property_management.sale_item_management"
                ],
                "summary": "This method is to delete sale item  by id",
                "description": "This method is to delete sale item  by id",
                "operationId": "deleteSaleItemById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/services": {
            "put": {
                "tags": [
                    "service_management"
                ],
                "summary": "This method is to update service",
                "description": "This method is to update service",
                "operationId": "updateService",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "icon",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "fa fa-- tui halua kha"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "service_management"
                ],
                "summary": "This method is to store service",
                "description": "This method is to store service",
                "operationId": "createService",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "icon",
                                    "description",
                                    "automobile_category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "fa fa tui halua kha"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "automobile_category_id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/services/{perPage}": {
            "get": {
                "tags": [
                    "service_management"
                ],
                "summary": "This method is to get automobile Services ",
                "description": "This method is to get automobile Services",
                "operationId": "getServices",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/services/single/get/{id}": {
            "get": {
                "tags": [
                    "automobile_management.category"
                ],
                "summary": "This method is to get service by id",
                "description": "This method is to get service by id",
                "operationId": "getServiceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/services-all/{categoryId}": {
            "get": {
                "tags": [
                    "basics"
                ],
                "summary": "This method is to get all automobile Services by category id ",
                "description": "This method is to get all automobile Services by category id",
                "operationId": "getAllServicesByCategoryId",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "categoryId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v2.0/services-all/{categoryId}": {
            "get": {
                "tags": [
                    "basics"
                ],
                "summary": "This method is to get all automobile Services by category id ",
                "description": "This method is to get all automobile Services by category id",
                "operationId": "getAllServicesByCategoryIdV2",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "categoryId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sub-services-all": {
            "get": {
                "tags": [
                    "basics"
                ],
                "summary": "This method is to get all sub services by service ids",
                "description": "This method is to get all sub services by service ids",
                "operationId": "getSubServicesAll",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "service_ids[]",
                        "in": "query",
                        "description": "service_id",
                        "required": true,
                        "example": "1,2"
                    },
                    {
                        "name": "is_fixed_price",
                        "in": "query",
                        "description": "is_fixed_price 0 or 1 as it is string sending in request true will be catch in string like 'true'",
                        "required": true,
                        "example": "0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/services/{id}": {
            "delete": {
                "tags": [
                    "service_management"
                ],
                "summary": "This method is to delete service by id",
                "description": "This method is to delete service by id",
                "operationId": "deleteServiceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sub-services": {
            "put": {
                "tags": [
                    "service_management.sub"
                ],
                "summary": "This method is to update sub service",
                "description": "This method is to update sub service",
                "operationId": "updateSubService",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "description"
                                    },
                                    "is_fixed_price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "service_management.sub"
                ],
                "summary": "This method is to store sub service",
                "description": "This method is to store sub service",
                "operationId": "createSubService",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "service_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "car"
                                    },
                                    "service_id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "is_fixed_price": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sub-services/{serviceId}/{perPage}": {
            "get": {
                "tags": [
                    "service_management.sub"
                ],
                "summary": "This method is to get automobile sub Services by service id",
                "description": "This method is to get automobile sub Services by service id",
                "operationId": "getSubServicesByServiceId",
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "serviceId",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "is_fixed_price",
                        "in": "query",
                        "description": "is_fixed_price 0 or 1 as it is string sending in request true will be catch in string like 'true'",
                        "required": true,
                        "example": "0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sub-services-all/{serviceId}": {
            "get": {
                "tags": [
                    "service_management"
                ],
                "summary": "This method is to get all automobile sub Services by service id ",
                "description": "This method is to get all automobile sub Services by service id",
                "operationId": "getAllSubServicesByServiceId",
                "parameters": [
                    {
                        "name": "serviceId",
                        "in": "path",
                        "description": "serviceId",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "is_fixed_price",
                        "in": "query",
                        "description": "is_fixed_price 0 or 1 as it is string sending in request true will be catch in string like 'true'",
                        "required": true,
                        "example": "0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/sub-services/{id}": {
            "delete": {
                "tags": [
                    "service_management.sub"
                ],
                "summary": "This method is to delete sub service by id",
                "description": "This method is to delete sub service by id",
                "operationId": "deleteSubServiceById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/shop-galleries/{shop_id}": {
            "get": {
                "tags": [
                    "shop_section.shop_gallery_management"
                ],
                "summary": "This method is to get shop galleries",
                "description": "This method is to get shop galleries",
                "operationId": "getShopGalleries",
                "parameters": [
                    {
                        "name": "shop_id",
                        "in": "path",
                        "description": "shop_id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "shop_section.shop_gallery_management"
                ],
                "summary": "This method is to store shop gallery",
                "description": "This method is to store shop gallery",
                "operationId": "createShopGallery",
                "parameters": [
                    {
                        "name": "shop_id",
                        "in": "path",
                        "description": "shop_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "images[]"
                                ],
                                "properties": {
                                    "images[]": {
                                        "description": "array of images to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "file"
                                        },
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/shop-galleries/{shop_id}/{id}": {
            "delete": {
                "tags": [
                    "shop_section.shop_gallery_management"
                ],
                "summary": "This method is to delete shop gallery by id",
                "description": "This method is to delete shop gellery by id",
                "operationId": "deleteShopGalleryById",
                "parameters": [
                    {
                        "name": "shop_id",
                        "in": "path",
                        "description": "shop_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/shop-image": {
            "post": {
                "tags": [
                    "shop_section.shop_management"
                ],
                "summary": "This method is to store shop image ",
                "description": "This method is to store shop image",
                "operationId": "createShopImage",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "image to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/shop-image-multiple": {
            "post": {
                "tags": [
                    "shop_management"
                ],
                "summary": "This method is to store shop gallery",
                "description": "This method is to store shop gallery",
                "operationId": "createShopImageMultiple",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "images[]"
                                ],
                                "properties": {
                                    "images[]": {
                                        "description": "array of images to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "file"
                                        },
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/auth/register-with-shop": {
            "post": {
                "tags": [
                    "shop_section.shop_management"
                ],
                "summary": "This method is to store user with shop",
                "description": "This method is to store user with shop",
                "operationId": "registerUserWithShop",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user",
                                    "shop"
                                ],
                                "properties": {
                                    "user": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "first_Name": "Rifat",
                                            "last_Name": "Al-Ashwad",
                                            "email": "rifatalashwad@gmail.com",
                                            "password": "12345678",
                                            "password_confirmation": "12345678",
                                            "phone": "01771034383",
                                            "image": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "address_line_1": "Dhaka",
                                            "address_line_2": "Dinajpur",
                                            "country": "Bangladesh",
                                            "city": "Dhaka",
                                            "postcode": "Dinajpur",
                                            "lat": "12",
                                            "long": "12"
                                        }
                                    },
                                    "shop": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "name": "ABCD Shop",
                                            "about": "Best Shop in Dhaka",
                                            "web_page": "https://www.facebook.com/",
                                            "phone": "01771034383",
                                            "email": "rifatalashwad@gmail.com",
                                            "additional_information": "No Additional Information",
                                            "address_line_1": "Dhaka",
                                            "address_line_2": "Dinajpur",
                                            "lat": "23.704263332849386",
                                            "long": "90.44707059805279",
                                            "country": "Bangladesh",
                                            "city": "Dhaka",
                                            "postcode": "Dinajpur",
                                            "sku_prefix": "bd shop",
                                            "logo": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "image": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "images": [
                                                "/a",
                                                "/b",
                                                "/c"
                                            ],
                                            "is_mobile_shop": true,
                                            "wifi_available": true,
                                            "labour_rate": 500
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/shops": {
            "put": {
                "tags": [
                    "shop_section.shop_management"
                ],
                "summary": "This method is to update user with shop",
                "description": "This method is to update user with shop",
                "operationId": "updateShop",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user",
                                    "shop"
                                ],
                                "properties": {
                                    "user": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "id": 1,
                                            "first_Name": "Rifat",
                                            "last_Name": "Al-Ashwad",
                                            "email": "rifatalashwad@gmail.com",
                                            "password": "12345678",
                                            "password_confirmation": "12345678",
                                            "phone": "01771034383",
                                            "image": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "address_line_1": "Dhaka",
                                            "address_line_2": "Dinajpur",
                                            "country": "Bangladesh",
                                            "city": "Dhaka",
                                            "postcode": "Dinajpur",
                                            "lat": "12",
                                            "long": "12"
                                        }
                                    },
                                    "shop": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "id": 1,
                                            "name": "ABCD Shop",
                                            "about": "Best Shop in Dhaka",
                                            "web_page": "https://www.facebook.com/",
                                            "phone": "01771034383",
                                            "email": "rifatalashwad@gmail.com",
                                            "additional_information": "No Additional Information",
                                            "address_line_1": "Dhaka",
                                            "address_line_2": "Dinajpur",
                                            "lat": "23.704263332849386",
                                            "long": "90.44707059805279",
                                            "country": "Bangladesh",
                                            "city": "Dhaka",
                                            "postcode": "Dinajpur",
                                            "sku_prefix": "bd shop",
                                            "logo": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "image": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "images": [
                                                "/a",
                                                "/b",
                                                "/c"
                                            ],
                                            "is_mobile_shop": true,
                                            "wifi_available": true,
                                            "labour_rate": 500
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/shops/{perPage}": {
            "get": {
                "tags": [
                    "shop_section.shop_management"
                ],
                "summary": "This method is to get shops",
                "description": "This method is to get shops",
                "operationId": "getShops",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "address",
                        "required": true,
                        "example": "address"
                    },
                    {
                        "name": "country_code",
                        "in": "query",
                        "description": "country_code",
                        "required": true,
                        "example": "country_code"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "city",
                        "required": true,
                        "example": "city"
                    },
                    {
                        "name": "start_lat",
                        "in": "query",
                        "description": "start_lat",
                        "required": true,
                        "example": "3"
                    },
                    {
                        "name": "end_lat",
                        "in": "query",
                        "description": "end_lat",
                        "required": true,
                        "example": "2"
                    },
                    {
                        "name": "start_long",
                        "in": "query",
                        "description": "start_long",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "end_long",
                        "in": "query",
                        "description": "end_long",
                        "required": true,
                        "example": "4"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/shops/single/{id}": {
            "get": {
                "tags": [
                    "shop_section.shop_management"
                ],
                "summary": "This method is to get shop by id",
                "description": "This method is to get shop by id",
                "operationId": "getShopById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/shops/{id}": {
            "delete": {
                "tags": [
                    "shop_section.shop_management"
                ],
                "summary": "This method is to delete shop by id",
                "description": "This method is to delete shop by id",
                "operationId": "deleteShopById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/available-countries/for-shop": {
            "get": {
                "tags": [
                    "shop_section.shop_management"
                ],
                "summary": "This method is to get available country list for shop",
                "description": "This method is to get available country list for shop",
                "operationId": "getAvailableCountriesForShop",
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/available-cities/for-shop/{country_code}": {
            "get": {
                "tags": [
                    "shop_section.shop_management"
                ],
                "summary": "This method is to get available city list",
                "description": "This method is to get available city list",
                "operationId": "getAvailableCitiesForShop",
                "parameters": [
                    {
                        "name": "country_code",
                        "in": "path",
                        "description": "country_code",
                        "required": true,
                        "example": "country_code"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/shops/by-shop-owner/all": {
            "get": {
                "tags": [
                    "shop_section.shop_management"
                ],
                "summary": "This method is to get shops",
                "description": "This method is to get shops",
                "operationId": "getAllShopsByShopOwner",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/tenancy-agreement": {
            "put": {
                "tags": [
                    "property_management.property_agreement"
                ],
                "summary": "Update property agreement",
                "description": "This method updates an existing property agreement based on the provided data.",
                "operationId": "updateTenancyAgreement",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "agreed_rent": {
                                        "type": "string",
                                        "example": "1000.00"
                                    },
                                    "security_deposit_hold": {
                                        "type": "string",
                                        "example": "2000.00"
                                    },
                                    "tenant_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "rent_payment_option": {
                                        "type": "string",
                                        "enum": [
                                            "By_Cash",
                                            "By_Cheque",
                                            "Bank_Transfer"
                                        ],
                                        "example": "By_Cash"
                                    },
                                    "tenant_contact_duration": {
                                        "type": "string",
                                        "example": "12 months"
                                    },
                                    "date_of_moving": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-11-01"
                                    },
                                    "let_only_agreement_expired_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-11-01",
                                        "nullable": true
                                    },
                                    "tenant_contact_expired_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-11-01",
                                        "nullable": true
                                    },
                                    "rent_due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-11-05"
                                    },
                                    "no_of_occupants": {
                                        "type": "string",
                                        "example": "3"
                                    },
                                    "tenant_contact_year_duration": {
                                        "type": "string",
                                        "example": "tenant_contact_year_duration"
                                    },
                                    "renewal_fee": {
                                        "type": "string",
                                        "example": "50.00"
                                    },
                                    "housing_act": {
                                        "type": "string",
                                        "example": "Housing Act 1988"
                                    },
                                    "let_type": {
                                        "type": "string",
                                        "example": "Standard Let"
                                    },
                                    "terms_and_conditions": {
                                        "type": "string",
                                        "example": "Updated terms and conditions..."
                                    },
                                    "agency_name": {
                                        "type": "string",
                                        "example": "XYZ Realty"
                                    },
                                    "landlord_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "agency_witness_name": {
                                        "type": "string",
                                        "example": "Jane Smith"
                                    },
                                    "tenant_witness_name": {
                                        "type": "string",
                                        "example": "Mark Johnson"
                                    },
                                    "agency_witness_address": {
                                        "type": "string",
                                        "example": "123 Agency St, City, Country"
                                    },
                                    "tenant_witness_address": {
                                        "type": "string",
                                        "example": "456 Tenant Rd, City, Country"
                                    },
                                    "guarantor_name": {
                                        "type": "string",
                                        "example": "Sarah Lee",
                                        "nullable": true
                                    },
                                    "guarantor_address": {
                                        "type": "string",
                                        "example": "789 Guarantor Ave, City, Country",
                                        "nullable": true
                                    },
                                    "tenant_sign_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-11-01"
                                    },
                                    "agency_sign_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-11-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.property_agreement"
                ],
                "summary": "Store property agreement",
                "description": "This method is to store a new property agreement, replacing any existing agreement for the same property and landlord.",
                "operationId": "createTenancyAgreement",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "property_id": {
                                        "type": "number",
                                        "example": "1"
                                    },
                                    "agreed_rent": {
                                        "type": "string",
                                        "example": "1000.00"
                                    },
                                    "security_deposit_hold": {
                                        "type": "string",
                                        "example": "2000.00"
                                    },
                                    "tenant_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "rent_payment_option": {
                                        "type": "string",
                                        "enum": [
                                            "By_Cash",
                                            "By_Cheque",
                                            "Bank_Transfer"
                                        ],
                                        "example": "By_Cash"
                                    },
                                    "tenant_contact_duration": {
                                        "type": "string",
                                        "example": "12 months"
                                    },
                                    "date_of_moving": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-11-01"
                                    },
                                    "let_only_agreement_expired_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-11-01",
                                        "nullable": true
                                    },
                                    "tenant_contact_expired_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-11-01",
                                        "nullable": true
                                    },
                                    "rent_due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-11-05"
                                    },
                                    "no_of_occupants": {
                                        "type": "string",
                                        "example": "3"
                                    },
                                    "tenant_contact_year_duration": {
                                        "type": "string",
                                        "example": "tenant_contact_year_duration"
                                    },
                                    "renewal_fee": {
                                        "type": "string",
                                        "example": "50.00"
                                    },
                                    "housing_act": {
                                        "type": "string",
                                        "example": "Housing Act 1988"
                                    },
                                    "let_type": {
                                        "type": "string",
                                        "example": "Standard Let"
                                    },
                                    "terms_and_conditions": {
                                        "type": "string",
                                        "example": "Updated terms and conditions..."
                                    },
                                    "agency_name": {
                                        "type": "string",
                                        "example": "XYZ Realty"
                                    },
                                    "landlord_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "agency_witness_name": {
                                        "type": "string",
                                        "example": "Jane Smith"
                                    },
                                    "tenant_witness_name": {
                                        "type": "string",
                                        "example": "Mark Johnson"
                                    },
                                    "agency_witness_address": {
                                        "type": "string",
                                        "example": "123 Agency St, City, Country"
                                    },
                                    "tenant_witness_address": {
                                        "type": "string",
                                        "example": "456 Tenant Rd, City, Country"
                                    },
                                    "guarantor_name": {
                                        "type": "string",
                                        "example": "Sarah Lee",
                                        "nullable": true
                                    },
                                    "guarantor_address": {
                                        "type": "string",
                                        "example": "789 Guarantor Ave, City, Country",
                                        "nullable": true
                                    },
                                    "tenant_sign_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-11-01"
                                    },
                                    "agency_sign_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-11-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Tenancy agreement created successfully."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Unauthenticated."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Validation failed."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Forbidden."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Bad request."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Resource not found."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/tenancy-agreements": {
            "get": {
                "tags": [
                    "property_management.property_agreement"
                ],
                "summary": "Get property agreements",
                "description": "This method retrieves the history of property agreements for a given property and landlord, including soft-deleted agreements.",
                "operationId": "getTenancyAgreements",
                "parameters": [
                    {
                        "name": "tenant_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/tenancy-agreements/{agreement_id}": {
            "delete": {
                "tags": [
                    "property_management.property_agreement"
                ],
                "summary": "Delete a document from a property",
                "description": "This method deletes a document associated with a specific property",
                "operationId": "deleteTenancyAgreement",
                "parameters": [
                    {
                        "name": "agreement_id",
                        "in": "path",
                        "description": "agreement ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Property or Document Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/tenant-image": {
            "post": {
                "tags": [
                    "property_management.tenant_management"
                ],
                "summary": "This method is to store tenant logo",
                "description": "This method is to store tenant logo",
                "operationId": "createTenantImage",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "image to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/tenants": {
            "put": {
                "tags": [
                    "property_management.tenant_management"
                ],
                "summary": "This method is to update tenant",
                "description": "This method is to update tenant",
                "operationId": "updateTenant",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "logo"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "image.jpg"
                                    },
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "last_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Al"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "rifatalashwad0@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "01771034383"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "dhaka"
                                    },
                                    "address_line_2": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "dinajpur"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "Bangladesh"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "Dhaka"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.tenant_management"
                ],
                "summary": "This method is to store tenant",
                "description": "This method is to store tenant",
                "operationId": "createTenant",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "image.jpg"
                                    },
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "last_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Al"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "rifatalashwad0@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "01771034383"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "dhaka"
                                    },
                                    "address_line_2": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "dinajpur"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "Bangladesh"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "Dhaka"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/tenants/{perPage}": {
            "get": {
                "tags": [
                    "property_management.tenant_management"
                ],
                "summary": "This method is to get tenants ",
                "description": "This method is to get tenants",
                "operationId": "getTenants",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "description": "property_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_ids[]",
                        "in": "query",
                        "description": "property_ids",
                        "required": true,
                        "example": "1,2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/tenants/get/all/optimized": {
            "get": {
                "tags": [
                    "property_management.tenant_management"
                ],
                "summary": "This method is to get tenants ",
                "description": "This method is to get tenants",
                "operationId": "getAllTenantsOptimized",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "property_id",
                        "in": "query",
                        "description": "property_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "property_ids[]",
                        "in": "query",
                        "description": "property_ids",
                        "required": true,
                        "example": "1,2"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/tenants/get/single/{id}": {
            "get": {
                "tags": [
                    "property_management.tenant_management"
                ],
                "summary": "This method is to get tenant by id",
                "description": "This method is to get tenant by id",
                "operationId": "getTenantById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/tenants/{id}": {
            "delete": {
                "tags": [
                    "property_management.tenant_management"
                ],
                "summary": "This method is to delete tenant by id",
                "description": "This method is to delete tenant by id",
                "operationId": "deleteTenantById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/tenant-inspections": {
            "get": {
                "tags": [
                    "property_management.tenant_inspections"
                ],
                "summary": "Get property agreements",
                "description": "This method retrieves the history of property agreements for a given property and landlord, including soft-deleted agreements.",
                "operationId": "getTenantInspections",
                "parameters": [
                    {
                        "name": "tenant_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "property_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "is_next_follow_up_date_passed",
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "next_follow_up_date_in",
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "property_management.tenant_inspections"
                ],
                "summary": "Update property agreement",
                "description": "This method updates an existing property agreement based on the provided data.",
                "operationId": "updateTenantInspection",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "tenant_id": {
                                        "type": "number",
                                        "example": "1"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "example": "Dhaka"
                                    },
                                    "inspected_by": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+8801234567890"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-25"
                                    },
                                    "next_inspection_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-25"
                                    },
                                    "inspection_duration": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "inspection_duration"
                                    },
                                    "maintenance_items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "maintenance_item_type_id": {
                                                    "type": "number",
                                                    "example": "1"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "good",
                                                        "average",
                                                        "dirty",
                                                        "na",
                                                        "work_required",
                                                        "resolved"
                                                    ],
                                                    "example": "good"
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "example": "Well maintained entrance",
                                                    "nullable": true
                                                },
                                                "next_follow_up_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-03-01",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "comments": {
                                        "type": "string",
                                        "example": "All items in good condition."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "property_management.tenant_inspections"
                ],
                "summary": "Store property agreement",
                "description": "This method is to store a new property agreement, replacing any existing agreement for the same property and landlord.",
                "operationId": "createTenantInspection",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "property_id": {
                                        "type": "number",
                                        "example": "1"
                                    },
                                    "tenant_id": {
                                        "type": "number",
                                        "example": "1"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "example": "Dhaka"
                                    },
                                    "inspected_by": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+8801234567890"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-25"
                                    },
                                    "next_inspection_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-25"
                                    },
                                    "inspection_duration": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "inspection_duration"
                                    },
                                    "maintenance_items": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "maintenance_item_type_id": {
                                                    "type": "number",
                                                    "example": "id"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "good",
                                                        "average",
                                                        "dirty",
                                                        "na",
                                                        "work_required",
                                                        "resolved"
                                                    ],
                                                    "example": "good"
                                                },
                                                "comment": {
                                                    "type": "string",
                                                    "example": "Well maintained entrance",
                                                    "nullable": true
                                                },
                                                "next_follow_up_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-03-01",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "comments": {
                                        "type": "string",
                                        "example": "All items in good condition."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Tenancy agreement created successfully."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Unauthenticated."
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Content",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Validation failed."
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Forbidden."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Bad request."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "message": "Resource not found."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/tenant-inspections/{id}": {
            "delete": {
                "tags": [
                    "property_management.tenant_inspections"
                ],
                "summary": "Delete a document from a property",
                "description": "This method deletes a document associated with a specific property",
                "operationId": "deleteTenantInspection",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Property or Document Not Found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    },
                    {
                        "pin": []
                    }
                ]
            }
        },
        "/v1.0/business-image": {
            "post": {
                "tags": [
                    "user_management"
                ],
                "summary": "This method is to store business image ",
                "description": "This method is to store business image",
                "operationId": "createBusinessImage",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "image to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/user-image": {
            "post": {
                "tags": [
                    "user_management"
                ],
                "summary": "This method is to store user image ",
                "description": "This method is to store user image",
                "operationId": "createUserImage",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "image to upload",
                                        "type": "file",
                                        "collectionFormat": "multi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/users": {
            "put": {
                "tags": [
                    "user_management"
                ],
                "summary": "This method is to update user",
                "description": "This method is to update user",
                "operationId": "updateUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "first_Name",
                                    "last_Name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "phone",
                                    "address_line_1",
                                    "address_line_2",
                                    "country",
                                    "city",
                                    "postcode",
                                    "role"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "last_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "How was this?"
                                    },
                                    "password": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "password_confirmation": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "phone": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "address_line_1": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "address_line_2": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "country": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "city": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "postcode": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "1"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "role": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "customer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "user_management"
                ],
                "summary": "This method is to store user",
                "description": "This method is to store user",
                "operationId": "createUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_Name",
                                    "last_Name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "phone",
                                    "address_line_1",
                                    "address_line_2",
                                    "country",
                                    "city",
                                    "postcode",
                                    "role"
                                ],
                                "properties": {
                                    "first_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Rifat"
                                    },
                                    "last_Name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Al"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "rifatalashwad0@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "12345678"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "12345678"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "01771034383"
                                    },
                                    "address_line_1": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "dhaka"
                                    },
                                    "address_line_2": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "dinajpur"
                                    },
                                    "country": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "Bangladesh"
                                    },
                                    "city": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "Dhaka"
                                    },
                                    "postcode": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "lat": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "long": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "1207"
                                    },
                                    "role": {
                                        "type": "string",
                                        "format": "boolean",
                                        "example": "customer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/auth/register-with-business": {
            "post": {
                "tags": [
                    "user_management"
                ],
                "summary": "This method is to store user with business",
                "description": "This method is to store user with business",
                "operationId": "registerUserWithBusiness",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user",
                                    "business"
                                ],
                                "properties": {
                                    "user": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "first_Name": "Rifat",
                                            "last_Name": "Al-Ashwad",
                                            "email": "rifatalashwad@gmail.com",
                                            "password": "12345678",
                                            "password_confirmation": "12345678",
                                            "phone": "01771034383",
                                            "image": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80"
                                        }
                                    },
                                    "business": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "name": "ABCD business",
                                            "about": "Best business in Dhaka",
                                            "web_page": "https://www.facebook.com/",
                                            "phone": "01771034383",
                                            "email": "rifatalashwad@gmail.com",
                                            "additional_information": "No Additional Information",
                                            "address_line_1": "Dhaka",
                                            "address_line_2": "Dinajpur",
                                            "lat": "23.704263332849386",
                                            "long": "90.44707059805279",
                                            "country": "Bangladesh",
                                            "city": "Dhaka",
                                            "currency": "BDT",
                                            "postcode": "Dinajpur",
                                            "invoice_title": "invoice_title",
                                            "footer_text": "footer_text",
                                            "is_reference_manual": "1",
                                            "receipt_footer": "t srt stgh st h",
                                            "account_name": "thdht rth s",
                                            "account_number": "fdghdgh",
                                            "sort_code": "sort_coderthdrfth",
                                            "pin": "1234",
                                            "type": "other",
                                            "logo": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "image": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80"
                                        }
                                    },
                                    "bill_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "bill_item_id": "1"
                                            },
                                            {
                                                "bill_item_id": "2"
                                            }
                                        ]
                                    },
                                    "sale_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "sale_id": "1",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            },
                                            {
                                                "sale_id": "2",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/auth/update-user-with-business": {
            "put": {
                "tags": [
                    "user_management"
                ],
                "summary": "This method is to update user with business",
                "description": "This method is to update user with business",
                "operationId": "updateBusiness",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user",
                                    "business"
                                ],
                                "properties": {
                                    "user": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "id": 1,
                                            "first_Name": "Rifat",
                                            "last_Name": "Al-Ashwad",
                                            "email": "rifatalashwad@gmail.com",
                                            "password": "12345678",
                                            "password_confirmation": "12345678",
                                            "phone": "01771034383",
                                            "image": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80"
                                        }
                                    },
                                    "business": {
                                        "type": "string",
                                        "format": "array",
                                        "example": {
                                            "id": 1,
                                            "name": "ABCD business",
                                            "about": "Best business in Dhaka",
                                            "web_page": "https://www.facebook.com/",
                                            "phone": "01771034383",
                                            "email": "rifatalashwad@gmail.com",
                                            "additional_information": "No Additional Information",
                                            "address_line_1": "Dhaka",
                                            "address_line_2": "Dinajpur",
                                            "lat": "23.704263332849386",
                                            "long": "90.44707059805279",
                                            "country": "Bangladesh",
                                            "city": "Dhaka",
                                            "postcode": "Dinajpur",
                                            "invoice_title": "invoice_title",
                                            "footer_text": "footer_text",
                                            "is_reference_manual": "1",
                                            "receipt_footer": "receipt_footer",
                                            "account_name": "thdht rth s",
                                            "account_number": "fdghdgh",
                                            "sort_code": "sort_coderthdrfth",
                                            "pin": "1234",
                                            "type": "other",
                                            "logo": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80",
                                            "image": "https://images.unsplash.com/photo-1671410714831-969877d103b1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80"
                                        }
                                    },
                                    "bill_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "bill_item_id": "1"
                                            },
                                            {
                                                "bill_item_id": "2"
                                            }
                                        ]
                                    },
                                    "sale_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "sale_id": "1",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            },
                                            {
                                                "sale_id": "2",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/auth/update-business-defaults": {
            "put": {
                "tags": [
                    "user_management"
                ],
                "summary": "This method is to update business defaults",
                "description": "This method is to update business defaults",
                "operationId": "updateBusinessDefaults",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user",
                                    "business"
                                ],
                                "properties": {
                                    "business_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "bill_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "bill_item_id": "1"
                                            },
                                            {
                                                "bill_item_id": "2"
                                            }
                                        ]
                                    },
                                    "sale_items": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            {
                                                "sale_id": "1",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            },
                                            {
                                                "sale_id": "2",
                                                "item": "item",
                                                "description": "description",
                                                "amount": "10.1"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/users/toggle-active": {
            "put": {
                "tags": [
                    "user_management"
                ],
                "summary": "This method is to toggle user activity",
                "description": "This method is to toggle user activity",
                "operationId": "toggleActive",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "first_Name",
                                    "last_Name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "phone",
                                    "address_line_1",
                                    "address_line_2",
                                    "country",
                                    "city",
                                    "postcode",
                                    "role"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "string",
                                        "format": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/users/{perPage}": {
            "get": {
                "tags": [
                    "user_management"
                ],
                "summary": "This method is to get user",
                "description": "This method is to get user",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "order_by",
                        "required": true,
                        "example": "ASC"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/users/get-by-id/{id}": {
            "get": {
                "tags": [
                    "user_management"
                ],
                "summary": "This method is to get user by id",
                "description": "This method is to get user by id",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/users/{id}": {
            "delete": {
                "tags": [
                    "user_management"
                ],
                "summary": "This method is to delete user by id",
                "description": "This method is to delete user by id",
                "operationId": "deleteUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/garages/{perPage}": {
            "get": {
                "tags": [
                    "client.basics"
                ],
                "summary": "This method is to get garages by client",
                "description": "This method is to get garages by client",
                "operationId": "getGaragesClient",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    },
                    {
                        "name": "country_code",
                        "in": "query",
                        "description": "country_code",
                        "required": true,
                        "example": "country_code"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "address",
                        "required": true,
                        "example": "address"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "city",
                        "required": true,
                        "example": "city"
                    },
                    {
                        "name": "start_lat",
                        "in": "query",
                        "description": "start_lat",
                        "required": true,
                        "example": "3"
                    },
                    {
                        "name": "end_lat",
                        "in": "query",
                        "description": "end_lat",
                        "required": true,
                        "example": "2"
                    },
                    {
                        "name": "start_long",
                        "in": "query",
                        "description": "start_long",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "end_long",
                        "in": "query",
                        "description": "end_long",
                        "required": true,
                        "example": "4"
                    },
                    {
                        "name": "automobile_make_ids[]",
                        "in": "query",
                        "description": "automobile_make_ids",
                        "required": true,
                        "example": "1,2"
                    },
                    {
                        "name": "automobile_model_ids[]",
                        "in": "query",
                        "description": "automobile_model_id",
                        "required": true,
                        "example": "1,2"
                    },
                    {
                        "name": "service_ids[]",
                        "in": "query",
                        "description": "service_id",
                        "required": true,
                        "example": "1,2"
                    },
                    {
                        "name": "sub_service_ids[]",
                        "in": "query",
                        "description": "sub_service_id",
                        "required": true,
                        "example": "1,2"
                    },
                    {
                        "name": "wifi_available",
                        "in": "query",
                        "description": "wifi_available",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "is_mobile_garage",
                        "in": "query",
                        "description": "is_mobile_garage",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "date_time",
                        "in": "query",
                        "description": "2019-06-29 22:00",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/garages/single/{id}": {
            "get": {
                "tags": [
                    "client.basics"
                ],
                "summary": "This method is to get garage by id",
                "description": "This method is to get garage by id",
                "operationId": "getGarageByIdClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/garages/service-model-details/{garage_id}": {
            "get": {
                "tags": [
                    "client.basics"
                ],
                "summary": "This method is to get garage service-model-details by garage id by id",
                "description": "This method is to get garage service-model-details by garage id by id",
                "operationId": "getGarageServiceModelDetailsByIdClient",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/garages/garage-automobile-models/{garage_id}/{automobile_make_id}": {
            "get": {
                "tags": [
                    "client.basics"
                ],
                "summary": "This method is to get garage service-model-details by garage id by id",
                "description": "This method is to get garage service-model-details by garage id by id",
                "operationId": "getGarageAutomobileModelsByAutomobileMakeId",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "automobile_make_id",
                        "in": "path",
                        "description": "automobile_make_id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/garage-affiliations/get/all/{garage_id}": {
            "get": {
                "tags": [
                    "client.basics"
                ],
                "summary": "This method is to get garage affiliations ",
                "description": "This method is to get garage affiliations",
                "operationId": "getGarageAffiliationsAllByGarageIdClient",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/favourite-sub-services/{perPage}": {
            "get": {
                "tags": [
                    "client.basics"
                ],
                "summary": "This method is to get favourite jobs",
                "description": "This method is to get favourite jobs",
                "operationId": "getFavouriteSubServices",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/bookings": {
            "put": {
                "tags": [
                    "client.booking"
                ],
                "summary": "This method is to update booking",
                "description": "This method is to update booking",
                "operationId": "updateBookingClient",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "garage_id",
                                    "coupon_code",
                                    "automobile_make_id",
                                    "automobile_model_id",
                                    "car_registration_no",
                                    "car_registration_year",
                                    "booking_sub_service_ids",
                                    "booking_garage_package_ids"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "coupon_code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "123456"
                                    },
                                    "automobile_make_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "automobile_model_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "car_registration_no": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "r-00011111"
                                    },
                                    "car_registration_year": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "transmission": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "transmission"
                                    },
                                    "fuel": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Fuel"
                                    },
                                    "booking_sub_service_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ]
                                    },
                                    "booking_garage_package_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "client.booking"
                ],
                "summary": "This method is to store booking",
                "description": "This method is to store booking",
                "operationId": "createBookingClient",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "garage_id",
                                    "coupon_code",
                                    "automobile_make_id",
                                    "automobile_model_id",
                                    "car_registration_no",
                                    "car_registration_year",
                                    "booking_sub_service_ids",
                                    "booking_garage_package_ids"
                                ],
                                "properties": {
                                    "garage_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "coupon_code": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "123456"
                                    },
                                    "automobile_make_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "automobile_model_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "car_registration_no": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "r-00011111"
                                    },
                                    "car_registration_year": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "additional_information": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "r-00011111"
                                    },
                                    "transmission": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "transmission"
                                    },
                                    "fuel": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Fuel"
                                    },
                                    "job_start_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "booking_sub_service_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ]
                                    },
                                    "booking_garage_package_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/bookings/change-status": {
            "patch": {
                "tags": [
                    "client.booking"
                ],
                "summary": "This method is to change booking status",
                "description": "This method is to change booking status.\n     * if status is accepted. the booking will be converted to a job.  and the status of the job will be pending ",
                "operationId": "changeBookingStatusClient",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "status"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "status": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "pending"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/bookings/{perPage}": {
            "get": {
                "tags": [
                    "client.booking"
                ],
                "summary": "This method is to get  bookings ",
                "description": "This method is to get bookings",
                "operationId": "getBookingsClient",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/bookings/single/{id}": {
            "get": {
                "tags": [
                    "client.booking"
                ],
                "summary": "This method is to get  booking by id ",
                "description": "This method is to get booking by id",
                "operationId": "getBookingByIdClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/bookings/{id}": {
            "delete": {
                "tags": [
                    "client.booking"
                ],
                "summary": "This method is to delete booking by id",
                "description": "This method is to delete booking by id",
                "operationId": "deleteBookingByIdClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/coupons/by-garage-id/{garage_id}/{perPage}": {
            "get": {
                "tags": [
                    "client.coupon"
                ],
                "summary": "This method is to get coupons by garage id ",
                "description": "This method is to get coupons by garage id",
                "operationId": "getCouponsByGarageIdClient",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "1"
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/coupons/all/{perPage}": {
            "get": {
                "tags": [
                    "client.coupon"
                ],
                "summary": "This method is to get coupons",
                "description": "This method is to get coupons",
                "operationId": "getCouponsClient",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/coupons/single/{id}": {
            "get": {
                "tags": [
                    "client.coupon"
                ],
                "summary": "This method is to get coupon by id ",
                "description": "This method is to get coupon by id ",
                "operationId": "getCouponByIdClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/coupons/get-discount/{garage_id}/{code}/{amount}": {
            "get": {
                "tags": [
                    "client.coupon"
                ],
                "summary": "This method is to check coupon",
                "description": "This method is to check coupon",
                "operationId": "getCouponDiscountClient",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "path",
                        "description": "garage_id",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "description": "code",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "amount",
                        "in": "path",
                        "description": "amount",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/jobs/{perPage}": {
            "get": {
                "tags": [
                    "client.job"
                ],
                "summary": "This method is to get  jobs ",
                "description": "This method is to get jobs",
                "operationId": "getJobsClient",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/jobs/single/{id}": {
            "get": {
                "tags": [
                    "client.job"
                ],
                "summary": "This method is to get  job by id ",
                "description": "This method is to get job by id",
                "operationId": "getJobByIdClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/pre-bookings": {
            "put": {
                "tags": [
                    "client.prebooking"
                ],
                "summary": "This method is to update pre booking",
                "description": "This method is to update pre booking",
                "operationId": "updatePreBookingClient",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "automobile_make_id",
                                    "automobile_model_id",
                                    "car_registration_no",
                                    "car_registration_year",
                                    "pre_booking_sub_service_ids"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "automobile_make_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "automobile_model_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "car_registration_no": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "r-00011111"
                                    },
                                    "car_registration_year": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "pre_booking_sub_service_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "client.prebooking"
                ],
                "summary": "This method is to store pre  booking",
                "description": "This method is to store pre booking",
                "operationId": "createPreBookingClient",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "automobile_make_id",
                                    "automobile_model_id",
                                    "car_registration_no",
                                    "car_registration_year",
                                    "pre_booking_sub_service_ids",
                                    "job_end_date"
                                ],
                                "properties": {
                                    "automobile_make_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "automobile_model_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "car_registration_no": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "r-00011111"
                                    },
                                    "car_registration_year": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "additional_information": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "r-00011111"
                                    },
                                    "transmission": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "transmission"
                                    },
                                    "fuel": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Fuel"
                                    },
                                    "job_start_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-06-29"
                                    },
                                    "job_start_time": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "10:10"
                                    },
                                    "job_end_date": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "2019-07-29"
                                    },
                                    "pre_booking_sub_service_ids": {
                                        "type": "string",
                                        "format": "array",
                                        "example": [
                                            1,
                                            2,
                                            3,
                                            4
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/pre-bookings/{perPage}": {
            "get": {
                "tags": [
                    "client.prebooking"
                ],
                "summary": "This method is to get pre bookings ",
                "description": "This method is to get pre bookings",
                "operationId": "getPreBookingsClient",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "perPage",
                        "required": true,
                        "example": "6"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "start_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "end_date",
                        "required": true,
                        "example": "2019-06-29"
                    },
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "search_key",
                        "required": true,
                        "example": "search_key"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/pre-bookings/single/{id}": {
            "get": {
                "tags": [
                    "client.prebooking"
                ],
                "summary": "This method is to get pre  booking by id ",
                "description": "This method is to get pre booking by id",
                "operationId": "getPreBookingByIdClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "6"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/pre-bookings/confirm": {
            "post": {
                "tags": [
                    "client.prebooking"
                ],
                "summary": "This method is to confirm pre  booking",
                "description": "This method is to confirm pre booking",
                "operationId": "confirmPreBookingClient",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pre_booking_id",
                                    "job_bid_id"
                                ],
                                "properties": {
                                    "pre_booking_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "job_bid_id": {
                                        "type": "number",
                                        "format": "number",
                                        "example": "1"
                                    },
                                    "is_confirmed": {
                                        "type": "boolean",
                                        "format": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1.0/client/pre-bookings/{id}": {
            "delete": {
                "tags": [
                    "client.prebooking"
                ],
                "summary": "This method is to delete pre booking by id",
                "description": "This method is to delete pre booking by id",
                "operationId": "deletePreBookingByIdClient",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/client/review-new/get/questions-all": {
            "get": {
                "tags": [
                    "client.review.setting.question"
                ],
                "summary": "This method is to get all question without pagination",
                "description": "This method is to get all question without pagination",
                "operationId": "getQuestionAllUnauthorized",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "query",
                        "description": "garage Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/client/review-new/get/questions-all-report": {
            "get": {
                "tags": [
                    "client.review.setting.question"
                ],
                "summary": "This method is to get all question report unauthorized",
                "description": "This method is to get all question report unauthorized",
                "operationId": "getQuestionAllReportUnauthorized",
                "parameters": [
                    {
                        "name": "garage_id",
                        "in": "query",
                        "description": "garage Id",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocesseble Content",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            },
            "pin": {
                "type": "apiKey",
                "name": "pin",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Garages",
            "description": "API Endpoints of Garages"
        }
    ]
}